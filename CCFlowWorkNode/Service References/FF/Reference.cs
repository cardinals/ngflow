//------------------------------------------------------------------------------
// <auto-generated>
//      This code is generated by the tool .
//      Runtime version :4.0.30319.1
//
//      Changes to this file may cause incorrect behavior , And if 
//      Regenerate code , These changes will be lost .
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WorkNode.FF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FF.CCFlowAPISoap")]
    public interface CCFlowAPISoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Flow_DoPress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFlow_DoPress(long workid, string msg, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndFlow_DoPress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Port_SigOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPort_SigOut(string userNo, System.AsyncCallback callback, object asyncState);
        
        void EndPort_SigOut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Port_Menu", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPort_Menu(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndPort_Menu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Port_ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPort_ChangePassword(string userNo, string oldPass, string newPass, System.AsyncCallback callback, object asyncState);
        
        string EndPort_ChangePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Port_SMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPort_SMS(string userNo, string lastTime, System.AsyncCallback callback, object asyncState);
        
        string EndPort_SMS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Port_SMS_DB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPort_SMS_DB(string userNo, string lastTime, System.AsyncCallback callback, object asyncState);
        
        string EndPort_SMS_DB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_GenerWillReturnNodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_GenerWillReturnNodes(int nodeID, long workid, long fid, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_GenerWillReturnNodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DataTable_DB_GenerWillReturnNodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDataTable_DB_GenerWillReturnNodes(int nodeID, long workid, long fid, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDataTable_DB_GenerWillReturnNodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_TaskPool", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_TaskPool(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_TaskPool(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_TaskPoolOfMyApply", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_TaskPoolOfMyApply(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_TaskPoolOfMyApply(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_GenerCanStartFlowsOfDataTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_GenerCanStartFlowsOfDataTable(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DataTable_DB_GenerCanStartFlowsOfDataTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDataTable_DB_GenerCanStartFlowsOfDataTable(string userNo, System.AsyncCallback callback, object asyncState);
        
        WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult EndDataTable_DB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DataTable_DB_GenerEmpWorksOfDataTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDataTable_DB_GenerEmpWorksOfDataTable(string userNo, System.AsyncCallback callback, object asyncState);
        
        WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult EndDataTable_DB_GenerEmpWorksOfDataTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_GenerEmpWorksOfDataTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_GenerEmpWorksOfDataTable(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_GenerEmpWorksOfDataTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_CCList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_CCList(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_CCList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_Truck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_Truck(string flowNo, long WorkID, long FID, System.AsyncCallback callback, object asyncState);
        
        string EndDB_Truck(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_GenerHungUpList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_GenerHungUpList(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_GenerHungUpList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DB_GenerRuning", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDB_GenerRuning(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndDB_GenerRuning(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_CreateBlankWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_CreateBlankWork(string flowNo, string starter, string title, System.AsyncCallback callback, object asyncState);
        
        long EndNode_CreateBlankWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_CC_DoDel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_CC_DoDel(string mypk, System.AsyncCallback callback, object asyncState);
        
        void EndNode_CC_DoDel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_CC_To", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_CC_To(string flowNo, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, System.AsyncCallback callback, object asyncState);
        
        string EndNode_CC_To(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_CC_SetRead", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_CC_SetRead(string mypks, System.AsyncCallback callback, object asyncState);
        
        string EndNode_CC_SetRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_CC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_CC(string fk_flow, int fk_node, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, string pFlowNo, long pWorkID, System.AsyncCallback callback, object asyncState);
        
        string EndNode_CC(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_SetDraft", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_SetDraft(string fk_flow, long workID, System.AsyncCallback callback, object asyncState);
        
        void EndNode_SetDraft(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_UnHungUpWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_UnHungUpWork(string fk_flow, long workid, string msg, System.AsyncCallback callback, object asyncState);
        
        void EndNode_UnHungUpWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Flow_DoUnSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFlow_DoUnSend(string fk_flow, long workid, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndFlow_DoUnSend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_HungUpWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_HungUpWork(string fk_flow, long workid, int wayInt, string reldata, string hungNote, System.AsyncCallback callback, object asyncState);
        
        string EndNode_HungUpWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_TaskPoolTakebackOne", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_TaskPoolTakebackOne(long workID, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndNode_TaskPoolTakebackOne(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_TaskPoolPutOne", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_TaskPoolPutOne(long workID, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndNode_TaskPoolPutOne(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_Shift", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_Shift(long workID, string toEmp, string msg, string userNo, string sid, System.AsyncCallback callback, object asyncState);
        
        string EndNode_Shift(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_ReturnWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_ReturnWork(string fk_flow, long workID, long fid, int currentNodeID, int returnToNodeID, string msg, bool isBackToThisNode, string userNo, string sid, System.AsyncCallback callback, object asyncState);
        
        string EndNode_ReturnWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AlertString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginAlertString(string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndAlertString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Port_Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPort_Login(string userNo, string pass, System.AsyncCallback callback, object asyncState);
        
        string EndPort_Login(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoIt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoIt(string flag, string userNo, string sid, string val0, string val1, string val2, string val3, string val4, string val5, System.AsyncCallback callback, object asyncState);
        
        string EndDoIt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GenerWorkNode_SL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGenerWorkNode_SL(string fk_flow, int fk_node, long workID, long fid, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndGenerWorkNode_SL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GenerWorkNode_Android", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGenerWorkNode_Android(string fk_flow, int fk_node, long workID, long fid, string userNo, System.AsyncCallback callback, object asyncState);
        
        string EndGenerWorkNode_Android(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_SaveWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_SaveWork(string fk_flow, int fk_node, long workID, string userNo, string dsXml, System.AsyncCallback callback, object asyncState);
        
        string EndNode_SaveWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Node_SendWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginNode_SendWork(string fk_flow, int fk_node, long workID, string dsXml, string currUserNo, System.AsyncCallback callback, object asyncState);
        
        string EndNode_SendWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetNoName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetNoName(string SQL, System.AsyncCallback callback, object asyncState);
        
        string EndGetNoName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Upload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpload(WorkNode.FF.UploadRequest request, System.AsyncCallback callback, object asyncState);
        
        WorkNode.FF.UploadResponse EndUpload(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ParseExp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginParseExp(string strExp, System.AsyncCallback callback, object asyncState);
        
        string EndParseExp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CfgKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCfgKey(string kev, System.AsyncCallback callback, object asyncState);
        
        string EndCfgKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUploadFile(WorkNode.FF.UploadFileRequest request, System.AsyncCallback callback, object asyncState);
        
        WorkNode.FF.UploadFileResponse EndUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLs(string sqls, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQLs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTable2DataTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTable2DataTable(string sql, System.AsyncCallback callback, object asyncState);
        
        WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult EndRunSQLReturnTable2DataTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnString(string sql, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnValInt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnValInt(string sql, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQLReturnValInt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnValFloat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnValFloat(string sql, System.AsyncCallback callback, object asyncState);
        
        float EndRunSQLReturnValFloat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTableS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTableS(string sqls, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnTableS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ParseStringToPinyin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginParseStringToPinyin(string name, System.AsyncCallback callback, object asyncState);
        
        string EndParseStringToPinyin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEnum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEnum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEnumField", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEnumField(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEnumField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveFKField", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveFKField(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, System.AsyncCallback callback, object asyncState);
        
        string EndSaveFKField(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveImageAsFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveImageAsFile(WorkNode.FF.SaveImageAsFileRequest request, System.AsyncCallback callback, object asyncState);
        
        WorkNode.FF.SaveImageAsFileResponse EndSaveImageAsFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoadFrmTemplete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLoadFrmTemplete(WorkNode.FF.LoadFrmTempleteRequest request, System.AsyncCallback callback, object asyncState);
        
        WorkNode.FF.LoadFrmTempleteResponse EndLoadFrmTemplete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoadFrmTempleteFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLoadFrmTempleteFile(string file, string fk_mapData, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState);
        
        string EndLoadFrmTempleteFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetXmlData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetXmlData(string xmlFileName, System.AsyncCallback callback, object asyncState);
        
        string EndGetXmlData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoType(string dotype, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState);
        
        string EndDoType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FtpMethod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFtpMethod(string doType, string v1, string v2, string v3, System.AsyncCallback callback, object asyncState);
        
        string EndFtpMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RequestSFTableV1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRequestSFTableV1(string uiBindKey, System.AsyncCallback callback, object asyncState);
        
        string EndRequestSFTableV1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GenerFrm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGenerFrm(string fk_mapdata, int workID, System.AsyncCallback callback, object asyncState);
        
        string EndGenerFrm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CopyFrm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCopyFrm(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState);
        
        string EndCopyFrm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveFrm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveFrm(string fk_mapdata, string xml, string sqls, string mapAttrKeyName, System.AsyncCallback callback, object asyncState);
        
        string EndSaveFrm(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long offSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] intoBuffer;
        
        public UploadRequest() {
        }
        
        public UploadRequest(string fileName, long offSet, byte[] intoBuffer) {
            this.fileName = fileName;
            this.offSet = offSet;
            this.intoBuffer = intoBuffer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UploadResult;
        
        public UploadResponse() {
        }
        
        public UploadResponse(bool UploadResult) {
            this.UploadResult = UploadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(byte[] FileByte, string fileName) {
            this.FileByte = FileByte;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadFileResult;
        
        public UploadFileResponse() {
        }
        
        public UploadFileResponse(string UploadFileResult) {
            this.UploadFileResult = UploadFileResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveImageAsFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveImageAsFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] img;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pkval;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fk_Frm_Ele;
        
        public SaveImageAsFileRequest() {
        }
        
        public SaveImageAsFileRequest(byte[] img, string pkval, string fk_Frm_Ele) {
            this.img = img;
            this.pkval = pkval;
            this.fk_Frm_Ele = fk_Frm_Ele;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveImageAsFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveImageAsFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SaveImageAsFileResult;
        
        public SaveImageAsFileResponse() {
        }
        
        public SaveImageAsFileResponse(string SaveImageAsFileResult) {
            this.SaveImageAsFileResult = SaveImageAsFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadFrmTemplete", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadFrmTempleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fk_mapData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool isClear;
        
        public LoadFrmTempleteRequest() {
        }
        
        public LoadFrmTempleteRequest(byte[] fileByte, string fk_mapData, bool isClear) {
            this.fileByte = fileByte;
            this.fk_mapData = fk_mapData;
            this.isClear = isClear;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadFrmTempleteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadFrmTempleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LoadFrmTempleteResult;
        
        public LoadFrmTempleteResponse() {
        }
        
        public LoadFrmTempleteResponse(string LoadFrmTempleteResult) {
            this.LoadFrmTempleteResult = LoadFrmTempleteResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CCFlowAPISoapChannel : WorkNode.FF.CCFlowAPISoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Flow_DoPressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Flow_DoPressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Port_MenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Port_MenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Port_ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Port_ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Port_SMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Port_SMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Port_SMS_DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Port_SMS_DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_GenerWillReturnNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_GenerWillReturnNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataTable_DB_GenerWillReturnNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DataTable_DB_GenerWillReturnNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_TaskPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_TaskPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_TaskPoolOfMyApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_TaskPoolOfMyApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_GenerCanStartFlowsOfDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_GenerCanStartFlowsOfDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataTable_DB_GenerCanStartFlowsOfDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DataTable_DB_GenerCanStartFlowsOfDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataTable_DB_GenerEmpWorksOfDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DataTable_DB_GenerEmpWorksOfDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_GenerEmpWorksOfDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_GenerEmpWorksOfDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_CCListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_CCListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_TruckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_TruckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_GenerHungUpListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_GenerHungUpListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_GenerRuningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DB_GenerRuningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_CreateBlankWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_CreateBlankWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_CC_ToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_CC_ToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_CC_SetReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_CC_SetReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_CCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_CCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Flow_DoUnSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Flow_DoUnSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_HungUpWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_HungUpWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_TaskPoolTakebackOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_TaskPoolTakebackOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_TaskPoolPutOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_TaskPoolPutOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_ShiftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_ShiftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_ReturnWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_ReturnWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlertStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AlertStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Port_LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Port_LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoItCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoItCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerWorkNode_SLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerWorkNode_SLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerWorkNode_AndroidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerWorkNode_AndroidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_SaveWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_SaveWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Node_SendWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Node_SendWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNoNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNoNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseExpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseExpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CfgKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CfgKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTable2DataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTable2DataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnValIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnValIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnValFloatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnValFloatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public float Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseStringToPinyinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseStringToPinyinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnumFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnumFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveFKFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveFKFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveImageAsFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveImageAsFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadFrmTempleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadFrmTempleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadFrmTempleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadFrmTempleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetXmlDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetXmlDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FtpMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FtpMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestSFTableV1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestSFTableV1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerFrmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerFrmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyFrmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyFrmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveFrmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveFrmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CCFlowAPISoapClient : System.ServiceModel.ClientBase<WorkNode.FF.CCFlowAPISoap>, WorkNode.FF.CCFlowAPISoap {
        
        private BeginOperationDelegate onBeginFlow_DoPressDelegate;
        
        private EndOperationDelegate onEndFlow_DoPressDelegate;
        
        private System.Threading.SendOrPostCallback onFlow_DoPressCompletedDelegate;
        
        private BeginOperationDelegate onBeginPort_SigOutDelegate;
        
        private EndOperationDelegate onEndPort_SigOutDelegate;
        
        private System.Threading.SendOrPostCallback onPort_SigOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginPort_MenuDelegate;
        
        private EndOperationDelegate onEndPort_MenuDelegate;
        
        private System.Threading.SendOrPostCallback onPort_MenuCompletedDelegate;
        
        private BeginOperationDelegate onBeginPort_ChangePasswordDelegate;
        
        private EndOperationDelegate onEndPort_ChangePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onPort_ChangePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginPort_SMSDelegate;
        
        private EndOperationDelegate onEndPort_SMSDelegate;
        
        private System.Threading.SendOrPostCallback onPort_SMSCompletedDelegate;
        
        private BeginOperationDelegate onBeginPort_SMS_DBDelegate;
        
        private EndOperationDelegate onEndPort_SMS_DBDelegate;
        
        private System.Threading.SendOrPostCallback onPort_SMS_DBCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_GenerWillReturnNodesDelegate;
        
        private EndOperationDelegate onEndDB_GenerWillReturnNodesDelegate;
        
        private System.Threading.SendOrPostCallback onDB_GenerWillReturnNodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDataTable_DB_GenerWillReturnNodesDelegate;
        
        private EndOperationDelegate onEndDataTable_DB_GenerWillReturnNodesDelegate;
        
        private System.Threading.SendOrPostCallback onDataTable_DB_GenerWillReturnNodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_TaskPoolDelegate;
        
        private EndOperationDelegate onEndDB_TaskPoolDelegate;
        
        private System.Threading.SendOrPostCallback onDB_TaskPoolCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_TaskPoolOfMyApplyDelegate;
        
        private EndOperationDelegate onEndDB_TaskPoolOfMyApplyDelegate;
        
        private System.Threading.SendOrPostCallback onDB_TaskPoolOfMyApplyCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_GenerCanStartFlowsOfDataTableDelegate;
        
        private EndOperationDelegate onEndDB_GenerCanStartFlowsOfDataTableDelegate;
        
        private System.Threading.SendOrPostCallback onDB_GenerCanStartFlowsOfDataTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDataTable_DB_GenerCanStartFlowsOfDataTableDelegate;
        
        private EndOperationDelegate onEndDataTable_DB_GenerCanStartFlowsOfDataTableDelegate;
        
        private System.Threading.SendOrPostCallback onDataTable_DB_GenerCanStartFlowsOfDataTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDataTable_DB_GenerEmpWorksOfDataTableDelegate;
        
        private EndOperationDelegate onEndDataTable_DB_GenerEmpWorksOfDataTableDelegate;
        
        private System.Threading.SendOrPostCallback onDataTable_DB_GenerEmpWorksOfDataTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_GenerEmpWorksOfDataTableDelegate;
        
        private EndOperationDelegate onEndDB_GenerEmpWorksOfDataTableDelegate;
        
        private System.Threading.SendOrPostCallback onDB_GenerEmpWorksOfDataTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_CCListDelegate;
        
        private EndOperationDelegate onEndDB_CCListDelegate;
        
        private System.Threading.SendOrPostCallback onDB_CCListCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_TruckDelegate;
        
        private EndOperationDelegate onEndDB_TruckDelegate;
        
        private System.Threading.SendOrPostCallback onDB_TruckCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_GenerHungUpListDelegate;
        
        private EndOperationDelegate onEndDB_GenerHungUpListDelegate;
        
        private System.Threading.SendOrPostCallback onDB_GenerHungUpListCompletedDelegate;
        
        private BeginOperationDelegate onBeginDB_GenerRuningDelegate;
        
        private EndOperationDelegate onEndDB_GenerRuningDelegate;
        
        private System.Threading.SendOrPostCallback onDB_GenerRuningCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_CreateBlankWorkDelegate;
        
        private EndOperationDelegate onEndNode_CreateBlankWorkDelegate;
        
        private System.Threading.SendOrPostCallback onNode_CreateBlankWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_CC_DoDelDelegate;
        
        private EndOperationDelegate onEndNode_CC_DoDelDelegate;
        
        private System.Threading.SendOrPostCallback onNode_CC_DoDelCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_CC_ToDelegate;
        
        private EndOperationDelegate onEndNode_CC_ToDelegate;
        
        private System.Threading.SendOrPostCallback onNode_CC_ToCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_CC_SetReadDelegate;
        
        private EndOperationDelegate onEndNode_CC_SetReadDelegate;
        
        private System.Threading.SendOrPostCallback onNode_CC_SetReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_CCDelegate;
        
        private EndOperationDelegate onEndNode_CCDelegate;
        
        private System.Threading.SendOrPostCallback onNode_CCCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_SetDraftDelegate;
        
        private EndOperationDelegate onEndNode_SetDraftDelegate;
        
        private System.Threading.SendOrPostCallback onNode_SetDraftCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_UnHungUpWorkDelegate;
        
        private EndOperationDelegate onEndNode_UnHungUpWorkDelegate;
        
        private System.Threading.SendOrPostCallback onNode_UnHungUpWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlow_DoUnSendDelegate;
        
        private EndOperationDelegate onEndFlow_DoUnSendDelegate;
        
        private System.Threading.SendOrPostCallback onFlow_DoUnSendCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_HungUpWorkDelegate;
        
        private EndOperationDelegate onEndNode_HungUpWorkDelegate;
        
        private System.Threading.SendOrPostCallback onNode_HungUpWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_TaskPoolTakebackOneDelegate;
        
        private EndOperationDelegate onEndNode_TaskPoolTakebackOneDelegate;
        
        private System.Threading.SendOrPostCallback onNode_TaskPoolTakebackOneCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_TaskPoolPutOneDelegate;
        
        private EndOperationDelegate onEndNode_TaskPoolPutOneDelegate;
        
        private System.Threading.SendOrPostCallback onNode_TaskPoolPutOneCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_ShiftDelegate;
        
        private EndOperationDelegate onEndNode_ShiftDelegate;
        
        private System.Threading.SendOrPostCallback onNode_ShiftCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_ReturnWorkDelegate;
        
        private EndOperationDelegate onEndNode_ReturnWorkDelegate;
        
        private System.Threading.SendOrPostCallback onNode_ReturnWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginAlertStringDelegate;
        
        private EndOperationDelegate onEndAlertStringDelegate;
        
        private System.Threading.SendOrPostCallback onAlertStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginPort_LoginDelegate;
        
        private EndOperationDelegate onEndPort_LoginDelegate;
        
        private System.Threading.SendOrPostCallback onPort_LoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoItDelegate;
        
        private EndOperationDelegate onEndDoItDelegate;
        
        private System.Threading.SendOrPostCallback onDoItCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerWorkNode_SLDelegate;
        
        private EndOperationDelegate onEndGenerWorkNode_SLDelegate;
        
        private System.Threading.SendOrPostCallback onGenerWorkNode_SLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerWorkNode_AndroidDelegate;
        
        private EndOperationDelegate onEndGenerWorkNode_AndroidDelegate;
        
        private System.Threading.SendOrPostCallback onGenerWorkNode_AndroidCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_SaveWorkDelegate;
        
        private EndOperationDelegate onEndNode_SaveWorkDelegate;
        
        private System.Threading.SendOrPostCallback onNode_SaveWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginNode_SendWorkDelegate;
        
        private EndOperationDelegate onEndNode_SendWorkDelegate;
        
        private System.Threading.SendOrPostCallback onNode_SendWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNoNameDelegate;
        
        private EndOperationDelegate onEndGetNoNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetNoNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadDelegate;
        
        private EndOperationDelegate onEndUploadDelegate;
        
        private System.Threading.SendOrPostCallback onUploadCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseExpDelegate;
        
        private EndOperationDelegate onEndParseExpDelegate;
        
        private System.Threading.SendOrPostCallback onParseExpCompletedDelegate;
        
        private BeginOperationDelegate onBeginCfgKeyDelegate;
        
        private EndOperationDelegate onEndCfgKeyDelegate;
        
        private System.Threading.SendOrPostCallback onCfgKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLDelegate;
        
        private EndOperationDelegate onEndRunSQLDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLsDelegate;
        
        private EndOperationDelegate onEndRunSQLsDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTable2DataTableDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTable2DataTableDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTable2DataTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnStringDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnStringDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnValIntDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnValIntDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnValIntCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnValFloatDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnValFloatDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnValFloatCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableSDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableSDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableSCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseStringToPinyinDelegate;
        
        private EndOperationDelegate onEndParseStringToPinyinDelegate;
        
        private System.Threading.SendOrPostCallback onParseStringToPinyinCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnumDelegate;
        
        private EndOperationDelegate onEndSaveEnumDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnumCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnumFieldDelegate;
        
        private EndOperationDelegate onEndSaveEnumFieldDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnumFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveFKFieldDelegate;
        
        private EndOperationDelegate onEndSaveFKFieldDelegate;
        
        private System.Threading.SendOrPostCallback onSaveFKFieldCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveImageAsFileDelegate;
        
        private EndOperationDelegate onEndSaveImageAsFileDelegate;
        
        private System.Threading.SendOrPostCallback onSaveImageAsFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadFrmTempleteDelegate;
        
        private EndOperationDelegate onEndLoadFrmTempleteDelegate;
        
        private System.Threading.SendOrPostCallback onLoadFrmTempleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadFrmTempleteFileDelegate;
        
        private EndOperationDelegate onEndLoadFrmTempleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onLoadFrmTempleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetXmlDataDelegate;
        
        private EndOperationDelegate onEndGetXmlDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetXmlDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoTypeDelegate;
        
        private EndOperationDelegate onEndDoTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDoTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnDelegate;
        
        private EndOperationDelegate onEndSaveEnDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnCompletedDelegate;
        
        private BeginOperationDelegate onBeginFtpMethodDelegate;
        
        private EndOperationDelegate onEndFtpMethodDelegate;
        
        private System.Threading.SendOrPostCallback onFtpMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestSFTableV1Delegate;
        
        private EndOperationDelegate onEndRequestSFTableV1Delegate;
        
        private System.Threading.SendOrPostCallback onRequestSFTableV1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerFrmDelegate;
        
        private EndOperationDelegate onEndGenerFrmDelegate;
        
        private System.Threading.SendOrPostCallback onGenerFrmCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyFrmDelegate;
        
        private EndOperationDelegate onEndCopyFrmDelegate;
        
        private System.Threading.SendOrPostCallback onCopyFrmCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveFrmDelegate;
        
        private EndOperationDelegate onEndSaveFrmDelegate;
        
        private System.Threading.SendOrPostCallback onSaveFrmCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CCFlowAPISoapClient() {
        }
        
        public CCFlowAPISoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CCFlowAPISoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CCFlowAPISoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CCFlowAPISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException(" Can not set  CookieContainer. Make sure that the binding contains  HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<Flow_DoPressCompletedEventArgs> Flow_DoPressCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Port_SigOutCompleted;
        
        public event System.EventHandler<Port_MenuCompletedEventArgs> Port_MenuCompleted;
        
        public event System.EventHandler<Port_ChangePasswordCompletedEventArgs> Port_ChangePasswordCompleted;
        
        public event System.EventHandler<Port_SMSCompletedEventArgs> Port_SMSCompleted;
        
        public event System.EventHandler<Port_SMS_DBCompletedEventArgs> Port_SMS_DBCompleted;
        
        public event System.EventHandler<DB_GenerWillReturnNodesCompletedEventArgs> DB_GenerWillReturnNodesCompleted;
        
        public event System.EventHandler<DataTable_DB_GenerWillReturnNodesCompletedEventArgs> DataTable_DB_GenerWillReturnNodesCompleted;
        
        public event System.EventHandler<DB_TaskPoolCompletedEventArgs> DB_TaskPoolCompleted;
        
        public event System.EventHandler<DB_TaskPoolOfMyApplyCompletedEventArgs> DB_TaskPoolOfMyApplyCompleted;
        
        public event System.EventHandler<DB_GenerCanStartFlowsOfDataTableCompletedEventArgs> DB_GenerCanStartFlowsOfDataTableCompleted;
        
        public event System.EventHandler<DataTable_DB_GenerCanStartFlowsOfDataTableCompletedEventArgs> DataTable_DB_GenerCanStartFlowsOfDataTableCompleted;
        
        public event System.EventHandler<DataTable_DB_GenerEmpWorksOfDataTableCompletedEventArgs> DataTable_DB_GenerEmpWorksOfDataTableCompleted;
        
        public event System.EventHandler<DB_GenerEmpWorksOfDataTableCompletedEventArgs> DB_GenerEmpWorksOfDataTableCompleted;
        
        public event System.EventHandler<DB_CCListCompletedEventArgs> DB_CCListCompleted;
        
        public event System.EventHandler<DB_TruckCompletedEventArgs> DB_TruckCompleted;
        
        public event System.EventHandler<DB_GenerHungUpListCompletedEventArgs> DB_GenerHungUpListCompleted;
        
        public event System.EventHandler<DB_GenerRuningCompletedEventArgs> DB_GenerRuningCompleted;
        
        public event System.EventHandler<Node_CreateBlankWorkCompletedEventArgs> Node_CreateBlankWorkCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Node_CC_DoDelCompleted;
        
        public event System.EventHandler<Node_CC_ToCompletedEventArgs> Node_CC_ToCompleted;
        
        public event System.EventHandler<Node_CC_SetReadCompletedEventArgs> Node_CC_SetReadCompleted;
        
        public event System.EventHandler<Node_CCCompletedEventArgs> Node_CCCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Node_SetDraftCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Node_UnHungUpWorkCompleted;
        
        public event System.EventHandler<Flow_DoUnSendCompletedEventArgs> Flow_DoUnSendCompleted;
        
        public event System.EventHandler<Node_HungUpWorkCompletedEventArgs> Node_HungUpWorkCompleted;
        
        public event System.EventHandler<Node_TaskPoolTakebackOneCompletedEventArgs> Node_TaskPoolTakebackOneCompleted;
        
        public event System.EventHandler<Node_TaskPoolPutOneCompletedEventArgs> Node_TaskPoolPutOneCompleted;
        
        public event System.EventHandler<Node_ShiftCompletedEventArgs> Node_ShiftCompleted;
        
        public event System.EventHandler<Node_ReturnWorkCompletedEventArgs> Node_ReturnWorkCompleted;
        
        public event System.EventHandler<AlertStringCompletedEventArgs> AlertStringCompleted;
        
        public event System.EventHandler<Port_LoginCompletedEventArgs> Port_LoginCompleted;
        
        public event System.EventHandler<DoItCompletedEventArgs> DoItCompleted;
        
        public event System.EventHandler<GenerWorkNode_SLCompletedEventArgs> GenerWorkNode_SLCompleted;
        
        public event System.EventHandler<GenerWorkNode_AndroidCompletedEventArgs> GenerWorkNode_AndroidCompleted;
        
        public event System.EventHandler<Node_SaveWorkCompletedEventArgs> Node_SaveWorkCompleted;
        
        public event System.EventHandler<Node_SendWorkCompletedEventArgs> Node_SendWorkCompleted;
        
        public event System.EventHandler<GetNoNameCompletedEventArgs> GetNoNameCompleted;
        
        public event System.EventHandler<UploadCompletedEventArgs> UploadCompleted;
        
        public event System.EventHandler<ParseExpCompletedEventArgs> ParseExpCompleted;
        
        public event System.EventHandler<CfgKeyCompletedEventArgs> CfgKeyCompleted;
        
        public event System.EventHandler<UploadFileCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<RunSQLCompletedEventArgs> RunSQLCompleted;
        
        public event System.EventHandler<RunSQLsCompletedEventArgs> RunSQLsCompleted;
        
        public event System.EventHandler<RunSQLReturnTableCompletedEventArgs> RunSQLReturnTableCompleted;
        
        public event System.EventHandler<RunSQLReturnTable2DataTableCompletedEventArgs> RunSQLReturnTable2DataTableCompleted;
        
        public event System.EventHandler<RunSQLReturnStringCompletedEventArgs> RunSQLReturnStringCompleted;
        
        public event System.EventHandler<RunSQLReturnValIntCompletedEventArgs> RunSQLReturnValIntCompleted;
        
        public event System.EventHandler<RunSQLReturnValFloatCompletedEventArgs> RunSQLReturnValFloatCompleted;
        
        public event System.EventHandler<RunSQLReturnTableSCompletedEventArgs> RunSQLReturnTableSCompleted;
        
        public event System.EventHandler<ParseStringToPinyinCompletedEventArgs> ParseStringToPinyinCompleted;
        
        public event System.EventHandler<SaveEnumCompletedEventArgs> SaveEnumCompleted;
        
        public event System.EventHandler<SaveEnumFieldCompletedEventArgs> SaveEnumFieldCompleted;
        
        public event System.EventHandler<SaveFKFieldCompletedEventArgs> SaveFKFieldCompleted;
        
        public event System.EventHandler<SaveImageAsFileCompletedEventArgs> SaveImageAsFileCompleted;
        
        public event System.EventHandler<LoadFrmTempleteCompletedEventArgs> LoadFrmTempleteCompleted;
        
        public event System.EventHandler<LoadFrmTempleteFileCompletedEventArgs> LoadFrmTempleteFileCompleted;
        
        public event System.EventHandler<GetXmlDataCompletedEventArgs> GetXmlDataCompleted;
        
        public event System.EventHandler<DoTypeCompletedEventArgs> DoTypeCompleted;
        
        public event System.EventHandler<SaveEnCompletedEventArgs> SaveEnCompleted;
        
        public event System.EventHandler<FtpMethodCompletedEventArgs> FtpMethodCompleted;
        
        public event System.EventHandler<RequestSFTableV1CompletedEventArgs> RequestSFTableV1Completed;
        
        public event System.EventHandler<GenerFrmCompletedEventArgs> GenerFrmCompleted;
        
        public event System.EventHandler<CopyFrmCompletedEventArgs> CopyFrmCompleted;
        
        public event System.EventHandler<SaveFrmCompletedEventArgs> SaveFrmCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginFlow_DoPress(long workid, string msg, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlow_DoPress(workid, msg, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndFlow_DoPress(System.IAsyncResult result) {
            return base.Channel.EndFlow_DoPress(result);
        }
        
        private System.IAsyncResult OnBeginFlow_DoPress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long workid = ((long)(inValues[0]));
            string msg = ((string)(inValues[1]));
            string userNo = ((string)(inValues[2]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginFlow_DoPress(workid, msg, userNo, callback, asyncState);
        }
        
        private object[] OnEndFlow_DoPress(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndFlow_DoPress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlow_DoPressCompleted(object state) {
            if ((this.Flow_DoPressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Flow_DoPressCompleted(this, new Flow_DoPressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Flow_DoPressAsync(long workid, string msg, string userNo) {
            this.Flow_DoPressAsync(workid, msg, userNo, null);
        }
        
        public void Flow_DoPressAsync(long workid, string msg, string userNo, object userState) {
            if ((this.onBeginFlow_DoPressDelegate == null)) {
                this.onBeginFlow_DoPressDelegate = new BeginOperationDelegate(this.OnBeginFlow_DoPress);
            }
            if ((this.onEndFlow_DoPressDelegate == null)) {
                this.onEndFlow_DoPressDelegate = new EndOperationDelegate(this.OnEndFlow_DoPress);
            }
            if ((this.onFlow_DoPressCompletedDelegate == null)) {
                this.onFlow_DoPressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlow_DoPressCompleted);
            }
            base.InvokeAsync(this.onBeginFlow_DoPressDelegate, new object[] {
                        workid,
                        msg,
                        userNo}, this.onEndFlow_DoPressDelegate, this.onFlow_DoPressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginPort_SigOut(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPort_SigOut(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WorkNode.FF.CCFlowAPISoap.EndPort_SigOut(System.IAsyncResult result) {
            base.Channel.EndPort_SigOut(result);
        }
        
        private System.IAsyncResult OnBeginPort_SigOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginPort_SigOut(userNo, callback, asyncState);
        }
        
        private object[] OnEndPort_SigOut(System.IAsyncResult result) {
            ((WorkNode.FF.CCFlowAPISoap)(this)).EndPort_SigOut(result);
            return null;
        }
        
        private void OnPort_SigOutCompleted(object state) {
            if ((this.Port_SigOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Port_SigOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Port_SigOutAsync(string userNo) {
            this.Port_SigOutAsync(userNo, null);
        }
        
        public void Port_SigOutAsync(string userNo, object userState) {
            if ((this.onBeginPort_SigOutDelegate == null)) {
                this.onBeginPort_SigOutDelegate = new BeginOperationDelegate(this.OnBeginPort_SigOut);
            }
            if ((this.onEndPort_SigOutDelegate == null)) {
                this.onEndPort_SigOutDelegate = new EndOperationDelegate(this.OnEndPort_SigOut);
            }
            if ((this.onPort_SigOutCompletedDelegate == null)) {
                this.onPort_SigOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPort_SigOutCompleted);
            }
            base.InvokeAsync(this.onBeginPort_SigOutDelegate, new object[] {
                        userNo}, this.onEndPort_SigOutDelegate, this.onPort_SigOutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginPort_Menu(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPort_Menu(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndPort_Menu(System.IAsyncResult result) {
            return base.Channel.EndPort_Menu(result);
        }
        
        private System.IAsyncResult OnBeginPort_Menu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginPort_Menu(userNo, callback, asyncState);
        }
        
        private object[] OnEndPort_Menu(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndPort_Menu(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPort_MenuCompleted(object state) {
            if ((this.Port_MenuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Port_MenuCompleted(this, new Port_MenuCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Port_MenuAsync(string userNo) {
            this.Port_MenuAsync(userNo, null);
        }
        
        public void Port_MenuAsync(string userNo, object userState) {
            if ((this.onBeginPort_MenuDelegate == null)) {
                this.onBeginPort_MenuDelegate = new BeginOperationDelegate(this.OnBeginPort_Menu);
            }
            if ((this.onEndPort_MenuDelegate == null)) {
                this.onEndPort_MenuDelegate = new EndOperationDelegate(this.OnEndPort_Menu);
            }
            if ((this.onPort_MenuCompletedDelegate == null)) {
                this.onPort_MenuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPort_MenuCompleted);
            }
            base.InvokeAsync(this.onBeginPort_MenuDelegate, new object[] {
                        userNo}, this.onEndPort_MenuDelegate, this.onPort_MenuCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginPort_ChangePassword(string userNo, string oldPass, string newPass, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPort_ChangePassword(userNo, oldPass, newPass, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndPort_ChangePassword(System.IAsyncResult result) {
            return base.Channel.EndPort_ChangePassword(result);
        }
        
        private System.IAsyncResult OnBeginPort_ChangePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            string oldPass = ((string)(inValues[1]));
            string newPass = ((string)(inValues[2]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginPort_ChangePassword(userNo, oldPass, newPass, callback, asyncState);
        }
        
        private object[] OnEndPort_ChangePassword(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndPort_ChangePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPort_ChangePasswordCompleted(object state) {
            if ((this.Port_ChangePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Port_ChangePasswordCompleted(this, new Port_ChangePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Port_ChangePasswordAsync(string userNo, string oldPass, string newPass) {
            this.Port_ChangePasswordAsync(userNo, oldPass, newPass, null);
        }
        
        public void Port_ChangePasswordAsync(string userNo, string oldPass, string newPass, object userState) {
            if ((this.onBeginPort_ChangePasswordDelegate == null)) {
                this.onBeginPort_ChangePasswordDelegate = new BeginOperationDelegate(this.OnBeginPort_ChangePassword);
            }
            if ((this.onEndPort_ChangePasswordDelegate == null)) {
                this.onEndPort_ChangePasswordDelegate = new EndOperationDelegate(this.OnEndPort_ChangePassword);
            }
            if ((this.onPort_ChangePasswordCompletedDelegate == null)) {
                this.onPort_ChangePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPort_ChangePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginPort_ChangePasswordDelegate, new object[] {
                        userNo,
                        oldPass,
                        newPass}, this.onEndPort_ChangePasswordDelegate, this.onPort_ChangePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginPort_SMS(string userNo, string lastTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPort_SMS(userNo, lastTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndPort_SMS(System.IAsyncResult result) {
            return base.Channel.EndPort_SMS(result);
        }
        
        private System.IAsyncResult OnBeginPort_SMS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            string lastTime = ((string)(inValues[1]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginPort_SMS(userNo, lastTime, callback, asyncState);
        }
        
        private object[] OnEndPort_SMS(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndPort_SMS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPort_SMSCompleted(object state) {
            if ((this.Port_SMSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Port_SMSCompleted(this, new Port_SMSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Port_SMSAsync(string userNo, string lastTime) {
            this.Port_SMSAsync(userNo, lastTime, null);
        }
        
        public void Port_SMSAsync(string userNo, string lastTime, object userState) {
            if ((this.onBeginPort_SMSDelegate == null)) {
                this.onBeginPort_SMSDelegate = new BeginOperationDelegate(this.OnBeginPort_SMS);
            }
            if ((this.onEndPort_SMSDelegate == null)) {
                this.onEndPort_SMSDelegate = new EndOperationDelegate(this.OnEndPort_SMS);
            }
            if ((this.onPort_SMSCompletedDelegate == null)) {
                this.onPort_SMSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPort_SMSCompleted);
            }
            base.InvokeAsync(this.onBeginPort_SMSDelegate, new object[] {
                        userNo,
                        lastTime}, this.onEndPort_SMSDelegate, this.onPort_SMSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginPort_SMS_DB(string userNo, string lastTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPort_SMS_DB(userNo, lastTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndPort_SMS_DB(System.IAsyncResult result) {
            return base.Channel.EndPort_SMS_DB(result);
        }
        
        private System.IAsyncResult OnBeginPort_SMS_DB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            string lastTime = ((string)(inValues[1]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginPort_SMS_DB(userNo, lastTime, callback, asyncState);
        }
        
        private object[] OnEndPort_SMS_DB(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndPort_SMS_DB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPort_SMS_DBCompleted(object state) {
            if ((this.Port_SMS_DBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Port_SMS_DBCompleted(this, new Port_SMS_DBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Port_SMS_DBAsync(string userNo, string lastTime) {
            this.Port_SMS_DBAsync(userNo, lastTime, null);
        }
        
        public void Port_SMS_DBAsync(string userNo, string lastTime, object userState) {
            if ((this.onBeginPort_SMS_DBDelegate == null)) {
                this.onBeginPort_SMS_DBDelegate = new BeginOperationDelegate(this.OnBeginPort_SMS_DB);
            }
            if ((this.onEndPort_SMS_DBDelegate == null)) {
                this.onEndPort_SMS_DBDelegate = new EndOperationDelegate(this.OnEndPort_SMS_DB);
            }
            if ((this.onPort_SMS_DBCompletedDelegate == null)) {
                this.onPort_SMS_DBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPort_SMS_DBCompleted);
            }
            base.InvokeAsync(this.onBeginPort_SMS_DBDelegate, new object[] {
                        userNo,
                        lastTime}, this.onEndPort_SMS_DBDelegate, this.onPort_SMS_DBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_GenerWillReturnNodes(int nodeID, long workid, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_GenerWillReturnNodes(nodeID, workid, fid, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_GenerWillReturnNodes(System.IAsyncResult result) {
            return base.Channel.EndDB_GenerWillReturnNodes(result);
        }
        
        private System.IAsyncResult OnBeginDB_GenerWillReturnNodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int nodeID = ((int)(inValues[0]));
            long workid = ((long)(inValues[1]));
            long fid = ((long)(inValues[2]));
            string userNo = ((string)(inValues[3]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_GenerWillReturnNodes(nodeID, workid, fid, userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_GenerWillReturnNodes(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_GenerWillReturnNodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_GenerWillReturnNodesCompleted(object state) {
            if ((this.DB_GenerWillReturnNodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_GenerWillReturnNodesCompleted(this, new DB_GenerWillReturnNodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_GenerWillReturnNodesAsync(int nodeID, long workid, long fid, string userNo) {
            this.DB_GenerWillReturnNodesAsync(nodeID, workid, fid, userNo, null);
        }
        
        public void DB_GenerWillReturnNodesAsync(int nodeID, long workid, long fid, string userNo, object userState) {
            if ((this.onBeginDB_GenerWillReturnNodesDelegate == null)) {
                this.onBeginDB_GenerWillReturnNodesDelegate = new BeginOperationDelegate(this.OnBeginDB_GenerWillReturnNodes);
            }
            if ((this.onEndDB_GenerWillReturnNodesDelegate == null)) {
                this.onEndDB_GenerWillReturnNodesDelegate = new EndOperationDelegate(this.OnEndDB_GenerWillReturnNodes);
            }
            if ((this.onDB_GenerWillReturnNodesCompletedDelegate == null)) {
                this.onDB_GenerWillReturnNodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_GenerWillReturnNodesCompleted);
            }
            base.InvokeAsync(this.onBeginDB_GenerWillReturnNodesDelegate, new object[] {
                        nodeID,
                        workid,
                        fid,
                        userNo}, this.onEndDB_GenerWillReturnNodesDelegate, this.onDB_GenerWillReturnNodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDataTable_DB_GenerWillReturnNodes(int nodeID, long workid, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDataTable_DB_GenerWillReturnNodes(nodeID, workid, fid, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDataTable_DB_GenerWillReturnNodes(System.IAsyncResult result) {
            return base.Channel.EndDataTable_DB_GenerWillReturnNodes(result);
        }
        
        private System.IAsyncResult OnBeginDataTable_DB_GenerWillReturnNodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int nodeID = ((int)(inValues[0]));
            long workid = ((long)(inValues[1]));
            long fid = ((long)(inValues[2]));
            string userNo = ((string)(inValues[3]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDataTable_DB_GenerWillReturnNodes(nodeID, workid, fid, userNo, callback, asyncState);
        }
        
        private object[] OnEndDataTable_DB_GenerWillReturnNodes(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDataTable_DB_GenerWillReturnNodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDataTable_DB_GenerWillReturnNodesCompleted(object state) {
            if ((this.DataTable_DB_GenerWillReturnNodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DataTable_DB_GenerWillReturnNodesCompleted(this, new DataTable_DB_GenerWillReturnNodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DataTable_DB_GenerWillReturnNodesAsync(int nodeID, long workid, long fid, string userNo) {
            this.DataTable_DB_GenerWillReturnNodesAsync(nodeID, workid, fid, userNo, null);
        }
        
        public void DataTable_DB_GenerWillReturnNodesAsync(int nodeID, long workid, long fid, string userNo, object userState) {
            if ((this.onBeginDataTable_DB_GenerWillReturnNodesDelegate == null)) {
                this.onBeginDataTable_DB_GenerWillReturnNodesDelegate = new BeginOperationDelegate(this.OnBeginDataTable_DB_GenerWillReturnNodes);
            }
            if ((this.onEndDataTable_DB_GenerWillReturnNodesDelegate == null)) {
                this.onEndDataTable_DB_GenerWillReturnNodesDelegate = new EndOperationDelegate(this.OnEndDataTable_DB_GenerWillReturnNodes);
            }
            if ((this.onDataTable_DB_GenerWillReturnNodesCompletedDelegate == null)) {
                this.onDataTable_DB_GenerWillReturnNodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDataTable_DB_GenerWillReturnNodesCompleted);
            }
            base.InvokeAsync(this.onBeginDataTable_DB_GenerWillReturnNodesDelegate, new object[] {
                        nodeID,
                        workid,
                        fid,
                        userNo}, this.onEndDataTable_DB_GenerWillReturnNodesDelegate, this.onDataTable_DB_GenerWillReturnNodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_TaskPool(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_TaskPool(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_TaskPool(System.IAsyncResult result) {
            return base.Channel.EndDB_TaskPool(result);
        }
        
        private System.IAsyncResult OnBeginDB_TaskPool(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_TaskPool(userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_TaskPool(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_TaskPool(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_TaskPoolCompleted(object state) {
            if ((this.DB_TaskPoolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_TaskPoolCompleted(this, new DB_TaskPoolCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_TaskPoolAsync(string userNo) {
            this.DB_TaskPoolAsync(userNo, null);
        }
        
        public void DB_TaskPoolAsync(string userNo, object userState) {
            if ((this.onBeginDB_TaskPoolDelegate == null)) {
                this.onBeginDB_TaskPoolDelegate = new BeginOperationDelegate(this.OnBeginDB_TaskPool);
            }
            if ((this.onEndDB_TaskPoolDelegate == null)) {
                this.onEndDB_TaskPoolDelegate = new EndOperationDelegate(this.OnEndDB_TaskPool);
            }
            if ((this.onDB_TaskPoolCompletedDelegate == null)) {
                this.onDB_TaskPoolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_TaskPoolCompleted);
            }
            base.InvokeAsync(this.onBeginDB_TaskPoolDelegate, new object[] {
                        userNo}, this.onEndDB_TaskPoolDelegate, this.onDB_TaskPoolCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_TaskPoolOfMyApply(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_TaskPoolOfMyApply(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_TaskPoolOfMyApply(System.IAsyncResult result) {
            return base.Channel.EndDB_TaskPoolOfMyApply(result);
        }
        
        private System.IAsyncResult OnBeginDB_TaskPoolOfMyApply(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_TaskPoolOfMyApply(userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_TaskPoolOfMyApply(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_TaskPoolOfMyApply(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_TaskPoolOfMyApplyCompleted(object state) {
            if ((this.DB_TaskPoolOfMyApplyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_TaskPoolOfMyApplyCompleted(this, new DB_TaskPoolOfMyApplyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_TaskPoolOfMyApplyAsync(string userNo) {
            this.DB_TaskPoolOfMyApplyAsync(userNo, null);
        }
        
        public void DB_TaskPoolOfMyApplyAsync(string userNo, object userState) {
            if ((this.onBeginDB_TaskPoolOfMyApplyDelegate == null)) {
                this.onBeginDB_TaskPoolOfMyApplyDelegate = new BeginOperationDelegate(this.OnBeginDB_TaskPoolOfMyApply);
            }
            if ((this.onEndDB_TaskPoolOfMyApplyDelegate == null)) {
                this.onEndDB_TaskPoolOfMyApplyDelegate = new EndOperationDelegate(this.OnEndDB_TaskPoolOfMyApply);
            }
            if ((this.onDB_TaskPoolOfMyApplyCompletedDelegate == null)) {
                this.onDB_TaskPoolOfMyApplyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_TaskPoolOfMyApplyCompleted);
            }
            base.InvokeAsync(this.onBeginDB_TaskPoolOfMyApplyDelegate, new object[] {
                        userNo}, this.onEndDB_TaskPoolOfMyApplyDelegate, this.onDB_TaskPoolOfMyApplyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_GenerCanStartFlowsOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_GenerCanStartFlowsOfDataTable(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result) {
            return base.Channel.EndDB_GenerCanStartFlowsOfDataTable(result);
        }
        
        private System.IAsyncResult OnBeginDB_GenerCanStartFlowsOfDataTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_GenerCanStartFlowsOfDataTable(userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_GenerCanStartFlowsOfDataTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_GenerCanStartFlowsOfDataTableCompleted(object state) {
            if ((this.DB_GenerCanStartFlowsOfDataTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_GenerCanStartFlowsOfDataTableCompleted(this, new DB_GenerCanStartFlowsOfDataTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_GenerCanStartFlowsOfDataTableAsync(string userNo) {
            this.DB_GenerCanStartFlowsOfDataTableAsync(userNo, null);
        }
        
        public void DB_GenerCanStartFlowsOfDataTableAsync(string userNo, object userState) {
            if ((this.onBeginDB_GenerCanStartFlowsOfDataTableDelegate == null)) {
                this.onBeginDB_GenerCanStartFlowsOfDataTableDelegate = new BeginOperationDelegate(this.OnBeginDB_GenerCanStartFlowsOfDataTable);
            }
            if ((this.onEndDB_GenerCanStartFlowsOfDataTableDelegate == null)) {
                this.onEndDB_GenerCanStartFlowsOfDataTableDelegate = new EndOperationDelegate(this.OnEndDB_GenerCanStartFlowsOfDataTable);
            }
            if ((this.onDB_GenerCanStartFlowsOfDataTableCompletedDelegate == null)) {
                this.onDB_GenerCanStartFlowsOfDataTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_GenerCanStartFlowsOfDataTableCompleted);
            }
            base.InvokeAsync(this.onBeginDB_GenerCanStartFlowsOfDataTableDelegate, new object[] {
                        userNo}, this.onEndDB_GenerCanStartFlowsOfDataTableDelegate, this.onDB_GenerCanStartFlowsOfDataTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDataTable_DB_GenerCanStartFlowsOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDataTable_DB_GenerCanStartFlowsOfDataTable(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult WorkNode.FF.CCFlowAPISoap.EndDataTable_DB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result) {
            return base.Channel.EndDataTable_DB_GenerCanStartFlowsOfDataTable(result);
        }
        
        private System.IAsyncResult OnBeginDataTable_DB_GenerCanStartFlowsOfDataTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDataTable_DB_GenerCanStartFlowsOfDataTable(userNo, callback, asyncState);
        }
        
        private object[] OnEndDataTable_DB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result) {
            WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDataTable_DB_GenerCanStartFlowsOfDataTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDataTable_DB_GenerCanStartFlowsOfDataTableCompleted(object state) {
            if ((this.DataTable_DB_GenerCanStartFlowsOfDataTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DataTable_DB_GenerCanStartFlowsOfDataTableCompleted(this, new DataTable_DB_GenerCanStartFlowsOfDataTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DataTable_DB_GenerCanStartFlowsOfDataTableAsync(string userNo) {
            this.DataTable_DB_GenerCanStartFlowsOfDataTableAsync(userNo, null);
        }
        
        public void DataTable_DB_GenerCanStartFlowsOfDataTableAsync(string userNo, object userState) {
            if ((this.onBeginDataTable_DB_GenerCanStartFlowsOfDataTableDelegate == null)) {
                this.onBeginDataTable_DB_GenerCanStartFlowsOfDataTableDelegate = new BeginOperationDelegate(this.OnBeginDataTable_DB_GenerCanStartFlowsOfDataTable);
            }
            if ((this.onEndDataTable_DB_GenerCanStartFlowsOfDataTableDelegate == null)) {
                this.onEndDataTable_DB_GenerCanStartFlowsOfDataTableDelegate = new EndOperationDelegate(this.OnEndDataTable_DB_GenerCanStartFlowsOfDataTable);
            }
            if ((this.onDataTable_DB_GenerCanStartFlowsOfDataTableCompletedDelegate == null)) {
                this.onDataTable_DB_GenerCanStartFlowsOfDataTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDataTable_DB_GenerCanStartFlowsOfDataTableCompleted);
            }
            base.InvokeAsync(this.onBeginDataTable_DB_GenerCanStartFlowsOfDataTableDelegate, new object[] {
                        userNo}, this.onEndDataTable_DB_GenerCanStartFlowsOfDataTableDelegate, this.onDataTable_DB_GenerCanStartFlowsOfDataTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDataTable_DB_GenerEmpWorksOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDataTable_DB_GenerEmpWorksOfDataTable(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult WorkNode.FF.CCFlowAPISoap.EndDataTable_DB_GenerEmpWorksOfDataTable(System.IAsyncResult result) {
            return base.Channel.EndDataTable_DB_GenerEmpWorksOfDataTable(result);
        }
        
        private System.IAsyncResult OnBeginDataTable_DB_GenerEmpWorksOfDataTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDataTable_DB_GenerEmpWorksOfDataTable(userNo, callback, asyncState);
        }
        
        private object[] OnEndDataTable_DB_GenerEmpWorksOfDataTable(System.IAsyncResult result) {
            WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDataTable_DB_GenerEmpWorksOfDataTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDataTable_DB_GenerEmpWorksOfDataTableCompleted(object state) {
            if ((this.DataTable_DB_GenerEmpWorksOfDataTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DataTable_DB_GenerEmpWorksOfDataTableCompleted(this, new DataTable_DB_GenerEmpWorksOfDataTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DataTable_DB_GenerEmpWorksOfDataTableAsync(string userNo) {
            this.DataTable_DB_GenerEmpWorksOfDataTableAsync(userNo, null);
        }
        
        public void DataTable_DB_GenerEmpWorksOfDataTableAsync(string userNo, object userState) {
            if ((this.onBeginDataTable_DB_GenerEmpWorksOfDataTableDelegate == null)) {
                this.onBeginDataTable_DB_GenerEmpWorksOfDataTableDelegate = new BeginOperationDelegate(this.OnBeginDataTable_DB_GenerEmpWorksOfDataTable);
            }
            if ((this.onEndDataTable_DB_GenerEmpWorksOfDataTableDelegate == null)) {
                this.onEndDataTable_DB_GenerEmpWorksOfDataTableDelegate = new EndOperationDelegate(this.OnEndDataTable_DB_GenerEmpWorksOfDataTable);
            }
            if ((this.onDataTable_DB_GenerEmpWorksOfDataTableCompletedDelegate == null)) {
                this.onDataTable_DB_GenerEmpWorksOfDataTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDataTable_DB_GenerEmpWorksOfDataTableCompleted);
            }
            base.InvokeAsync(this.onBeginDataTable_DB_GenerEmpWorksOfDataTableDelegate, new object[] {
                        userNo}, this.onEndDataTable_DB_GenerEmpWorksOfDataTableDelegate, this.onDataTable_DB_GenerEmpWorksOfDataTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_GenerEmpWorksOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_GenerEmpWorksOfDataTable(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_GenerEmpWorksOfDataTable(System.IAsyncResult result) {
            return base.Channel.EndDB_GenerEmpWorksOfDataTable(result);
        }
        
        private System.IAsyncResult OnBeginDB_GenerEmpWorksOfDataTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_GenerEmpWorksOfDataTable(userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_GenerEmpWorksOfDataTable(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_GenerEmpWorksOfDataTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_GenerEmpWorksOfDataTableCompleted(object state) {
            if ((this.DB_GenerEmpWorksOfDataTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_GenerEmpWorksOfDataTableCompleted(this, new DB_GenerEmpWorksOfDataTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_GenerEmpWorksOfDataTableAsync(string userNo) {
            this.DB_GenerEmpWorksOfDataTableAsync(userNo, null);
        }
        
        public void DB_GenerEmpWorksOfDataTableAsync(string userNo, object userState) {
            if ((this.onBeginDB_GenerEmpWorksOfDataTableDelegate == null)) {
                this.onBeginDB_GenerEmpWorksOfDataTableDelegate = new BeginOperationDelegate(this.OnBeginDB_GenerEmpWorksOfDataTable);
            }
            if ((this.onEndDB_GenerEmpWorksOfDataTableDelegate == null)) {
                this.onEndDB_GenerEmpWorksOfDataTableDelegate = new EndOperationDelegate(this.OnEndDB_GenerEmpWorksOfDataTable);
            }
            if ((this.onDB_GenerEmpWorksOfDataTableCompletedDelegate == null)) {
                this.onDB_GenerEmpWorksOfDataTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_GenerEmpWorksOfDataTableCompleted);
            }
            base.InvokeAsync(this.onBeginDB_GenerEmpWorksOfDataTableDelegate, new object[] {
                        userNo}, this.onEndDB_GenerEmpWorksOfDataTableDelegate, this.onDB_GenerEmpWorksOfDataTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_CCList(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_CCList(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_CCList(System.IAsyncResult result) {
            return base.Channel.EndDB_CCList(result);
        }
        
        private System.IAsyncResult OnBeginDB_CCList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_CCList(userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_CCList(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_CCList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_CCListCompleted(object state) {
            if ((this.DB_CCListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_CCListCompleted(this, new DB_CCListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_CCListAsync(string userNo) {
            this.DB_CCListAsync(userNo, null);
        }
        
        public void DB_CCListAsync(string userNo, object userState) {
            if ((this.onBeginDB_CCListDelegate == null)) {
                this.onBeginDB_CCListDelegate = new BeginOperationDelegate(this.OnBeginDB_CCList);
            }
            if ((this.onEndDB_CCListDelegate == null)) {
                this.onEndDB_CCListDelegate = new EndOperationDelegate(this.OnEndDB_CCList);
            }
            if ((this.onDB_CCListCompletedDelegate == null)) {
                this.onDB_CCListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_CCListCompleted);
            }
            base.InvokeAsync(this.onBeginDB_CCListDelegate, new object[] {
                        userNo}, this.onEndDB_CCListDelegate, this.onDB_CCListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_Truck(string flowNo, long WorkID, long FID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_Truck(flowNo, WorkID, FID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_Truck(System.IAsyncResult result) {
            return base.Channel.EndDB_Truck(result);
        }
        
        private System.IAsyncResult OnBeginDB_Truck(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flowNo = ((string)(inValues[0]));
            long WorkID = ((long)(inValues[1]));
            long FID = ((long)(inValues[2]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_Truck(flowNo, WorkID, FID, callback, asyncState);
        }
        
        private object[] OnEndDB_Truck(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_Truck(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_TruckCompleted(object state) {
            if ((this.DB_TruckCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_TruckCompleted(this, new DB_TruckCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_TruckAsync(string flowNo, long WorkID, long FID) {
            this.DB_TruckAsync(flowNo, WorkID, FID, null);
        }
        
        public void DB_TruckAsync(string flowNo, long WorkID, long FID, object userState) {
            if ((this.onBeginDB_TruckDelegate == null)) {
                this.onBeginDB_TruckDelegate = new BeginOperationDelegate(this.OnBeginDB_Truck);
            }
            if ((this.onEndDB_TruckDelegate == null)) {
                this.onEndDB_TruckDelegate = new EndOperationDelegate(this.OnEndDB_Truck);
            }
            if ((this.onDB_TruckCompletedDelegate == null)) {
                this.onDB_TruckCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_TruckCompleted);
            }
            base.InvokeAsync(this.onBeginDB_TruckDelegate, new object[] {
                        flowNo,
                        WorkID,
                        FID}, this.onEndDB_TruckDelegate, this.onDB_TruckCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_GenerHungUpList(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_GenerHungUpList(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_GenerHungUpList(System.IAsyncResult result) {
            return base.Channel.EndDB_GenerHungUpList(result);
        }
        
        private System.IAsyncResult OnBeginDB_GenerHungUpList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_GenerHungUpList(userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_GenerHungUpList(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_GenerHungUpList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_GenerHungUpListCompleted(object state) {
            if ((this.DB_GenerHungUpListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_GenerHungUpListCompleted(this, new DB_GenerHungUpListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_GenerHungUpListAsync(string userNo) {
            this.DB_GenerHungUpListAsync(userNo, null);
        }
        
        public void DB_GenerHungUpListAsync(string userNo, object userState) {
            if ((this.onBeginDB_GenerHungUpListDelegate == null)) {
                this.onBeginDB_GenerHungUpListDelegate = new BeginOperationDelegate(this.OnBeginDB_GenerHungUpList);
            }
            if ((this.onEndDB_GenerHungUpListDelegate == null)) {
                this.onEndDB_GenerHungUpListDelegate = new EndOperationDelegate(this.OnEndDB_GenerHungUpList);
            }
            if ((this.onDB_GenerHungUpListCompletedDelegate == null)) {
                this.onDB_GenerHungUpListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_GenerHungUpListCompleted);
            }
            base.InvokeAsync(this.onBeginDB_GenerHungUpListDelegate, new object[] {
                        userNo}, this.onEndDB_GenerHungUpListDelegate, this.onDB_GenerHungUpListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDB_GenerRuning(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDB_GenerRuning(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDB_GenerRuning(System.IAsyncResult result) {
            return base.Channel.EndDB_GenerRuning(result);
        }
        
        private System.IAsyncResult OnBeginDB_GenerRuning(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDB_GenerRuning(userNo, callback, asyncState);
        }
        
        private object[] OnEndDB_GenerRuning(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDB_GenerRuning(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDB_GenerRuningCompleted(object state) {
            if ((this.DB_GenerRuningCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DB_GenerRuningCompleted(this, new DB_GenerRuningCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DB_GenerRuningAsync(string userNo) {
            this.DB_GenerRuningAsync(userNo, null);
        }
        
        public void DB_GenerRuningAsync(string userNo, object userState) {
            if ((this.onBeginDB_GenerRuningDelegate == null)) {
                this.onBeginDB_GenerRuningDelegate = new BeginOperationDelegate(this.OnBeginDB_GenerRuning);
            }
            if ((this.onEndDB_GenerRuningDelegate == null)) {
                this.onEndDB_GenerRuningDelegate = new EndOperationDelegate(this.OnEndDB_GenerRuning);
            }
            if ((this.onDB_GenerRuningCompletedDelegate == null)) {
                this.onDB_GenerRuningCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDB_GenerRuningCompleted);
            }
            base.InvokeAsync(this.onBeginDB_GenerRuningDelegate, new object[] {
                        userNo}, this.onEndDB_GenerRuningDelegate, this.onDB_GenerRuningCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_CreateBlankWork(string flowNo, string starter, string title, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_CreateBlankWork(flowNo, starter, title, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long WorkNode.FF.CCFlowAPISoap.EndNode_CreateBlankWork(System.IAsyncResult result) {
            return base.Channel.EndNode_CreateBlankWork(result);
        }
        
        private System.IAsyncResult OnBeginNode_CreateBlankWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flowNo = ((string)(inValues[0]));
            string starter = ((string)(inValues[1]));
            string title = ((string)(inValues[2]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_CreateBlankWork(flowNo, starter, title, callback, asyncState);
        }
        
        private object[] OnEndNode_CreateBlankWork(System.IAsyncResult result) {
            long retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_CreateBlankWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_CreateBlankWorkCompleted(object state) {
            if ((this.Node_CreateBlankWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_CreateBlankWorkCompleted(this, new Node_CreateBlankWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_CreateBlankWorkAsync(string flowNo, string starter, string title) {
            this.Node_CreateBlankWorkAsync(flowNo, starter, title, null);
        }
        
        public void Node_CreateBlankWorkAsync(string flowNo, string starter, string title, object userState) {
            if ((this.onBeginNode_CreateBlankWorkDelegate == null)) {
                this.onBeginNode_CreateBlankWorkDelegate = new BeginOperationDelegate(this.OnBeginNode_CreateBlankWork);
            }
            if ((this.onEndNode_CreateBlankWorkDelegate == null)) {
                this.onEndNode_CreateBlankWorkDelegate = new EndOperationDelegate(this.OnEndNode_CreateBlankWork);
            }
            if ((this.onNode_CreateBlankWorkCompletedDelegate == null)) {
                this.onNode_CreateBlankWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_CreateBlankWorkCompleted);
            }
            base.InvokeAsync(this.onBeginNode_CreateBlankWorkDelegate, new object[] {
                        flowNo,
                        starter,
                        title}, this.onEndNode_CreateBlankWorkDelegate, this.onNode_CreateBlankWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_CC_DoDel(string mypk, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_CC_DoDel(mypk, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WorkNode.FF.CCFlowAPISoap.EndNode_CC_DoDel(System.IAsyncResult result) {
            base.Channel.EndNode_CC_DoDel(result);
        }
        
        private System.IAsyncResult OnBeginNode_CC_DoDel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mypk = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_CC_DoDel(mypk, callback, asyncState);
        }
        
        private object[] OnEndNode_CC_DoDel(System.IAsyncResult result) {
            ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_CC_DoDel(result);
            return null;
        }
        
        private void OnNode_CC_DoDelCompleted(object state) {
            if ((this.Node_CC_DoDelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_CC_DoDelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_CC_DoDelAsync(string mypk) {
            this.Node_CC_DoDelAsync(mypk, null);
        }
        
        public void Node_CC_DoDelAsync(string mypk, object userState) {
            if ((this.onBeginNode_CC_DoDelDelegate == null)) {
                this.onBeginNode_CC_DoDelDelegate = new BeginOperationDelegate(this.OnBeginNode_CC_DoDel);
            }
            if ((this.onEndNode_CC_DoDelDelegate == null)) {
                this.onEndNode_CC_DoDelDelegate = new EndOperationDelegate(this.OnEndNode_CC_DoDel);
            }
            if ((this.onNode_CC_DoDelCompletedDelegate == null)) {
                this.onNode_CC_DoDelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_CC_DoDelCompleted);
            }
            base.InvokeAsync(this.onBeginNode_CC_DoDelDelegate, new object[] {
                        mypk}, this.onEndNode_CC_DoDelDelegate, this.onNode_CC_DoDelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_CC_To(string flowNo, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_CC_To(flowNo, workID, toEmpNo, toEmpName, msgTitle, msgDoc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_CC_To(System.IAsyncResult result) {
            return base.Channel.EndNode_CC_To(result);
        }
        
        private System.IAsyncResult OnBeginNode_CC_To(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flowNo = ((string)(inValues[0]));
            long workID = ((long)(inValues[1]));
            string toEmpNo = ((string)(inValues[2]));
            string toEmpName = ((string)(inValues[3]));
            string msgTitle = ((string)(inValues[4]));
            string msgDoc = ((string)(inValues[5]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_CC_To(flowNo, workID, toEmpNo, toEmpName, msgTitle, msgDoc, callback, asyncState);
        }
        
        private object[] OnEndNode_CC_To(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_CC_To(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_CC_ToCompleted(object state) {
            if ((this.Node_CC_ToCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_CC_ToCompleted(this, new Node_CC_ToCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_CC_ToAsync(string flowNo, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc) {
            this.Node_CC_ToAsync(flowNo, workID, toEmpNo, toEmpName, msgTitle, msgDoc, null);
        }
        
        public void Node_CC_ToAsync(string flowNo, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, object userState) {
            if ((this.onBeginNode_CC_ToDelegate == null)) {
                this.onBeginNode_CC_ToDelegate = new BeginOperationDelegate(this.OnBeginNode_CC_To);
            }
            if ((this.onEndNode_CC_ToDelegate == null)) {
                this.onEndNode_CC_ToDelegate = new EndOperationDelegate(this.OnEndNode_CC_To);
            }
            if ((this.onNode_CC_ToCompletedDelegate == null)) {
                this.onNode_CC_ToCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_CC_ToCompleted);
            }
            base.InvokeAsync(this.onBeginNode_CC_ToDelegate, new object[] {
                        flowNo,
                        workID,
                        toEmpNo,
                        toEmpName,
                        msgTitle,
                        msgDoc}, this.onEndNode_CC_ToDelegate, this.onNode_CC_ToCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_CC_SetRead(string mypks, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_CC_SetRead(mypks, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_CC_SetRead(System.IAsyncResult result) {
            return base.Channel.EndNode_CC_SetRead(result);
        }
        
        private System.IAsyncResult OnBeginNode_CC_SetRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mypks = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_CC_SetRead(mypks, callback, asyncState);
        }
        
        private object[] OnEndNode_CC_SetRead(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_CC_SetRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_CC_SetReadCompleted(object state) {
            if ((this.Node_CC_SetReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_CC_SetReadCompleted(this, new Node_CC_SetReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_CC_SetReadAsync(string mypks) {
            this.Node_CC_SetReadAsync(mypks, null);
        }
        
        public void Node_CC_SetReadAsync(string mypks, object userState) {
            if ((this.onBeginNode_CC_SetReadDelegate == null)) {
                this.onBeginNode_CC_SetReadDelegate = new BeginOperationDelegate(this.OnBeginNode_CC_SetRead);
            }
            if ((this.onEndNode_CC_SetReadDelegate == null)) {
                this.onEndNode_CC_SetReadDelegate = new EndOperationDelegate(this.OnEndNode_CC_SetRead);
            }
            if ((this.onNode_CC_SetReadCompletedDelegate == null)) {
                this.onNode_CC_SetReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_CC_SetReadCompleted);
            }
            base.InvokeAsync(this.onBeginNode_CC_SetReadDelegate, new object[] {
                        mypks}, this.onEndNode_CC_SetReadDelegate, this.onNode_CC_SetReadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_CC(string fk_flow, int fk_node, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, string pFlowNo, long pWorkID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_CC(fk_flow, fk_node, workID, toEmpNo, toEmpName, msgTitle, msgDoc, pFlowNo, pWorkID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_CC(System.IAsyncResult result) {
            return base.Channel.EndNode_CC(result);
        }
        
        private System.IAsyncResult OnBeginNode_CC(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int fk_node = ((int)(inValues[1]));
            long workID = ((long)(inValues[2]));
            string toEmpNo = ((string)(inValues[3]));
            string toEmpName = ((string)(inValues[4]));
            string msgTitle = ((string)(inValues[5]));
            string msgDoc = ((string)(inValues[6]));
            string pFlowNo = ((string)(inValues[7]));
            long pWorkID = ((long)(inValues[8]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_CC(fk_flow, fk_node, workID, toEmpNo, toEmpName, msgTitle, msgDoc, pFlowNo, pWorkID, callback, asyncState);
        }
        
        private object[] OnEndNode_CC(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_CC(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_CCCompleted(object state) {
            if ((this.Node_CCCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_CCCompleted(this, new Node_CCCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_CCAsync(string fk_flow, int fk_node, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, string pFlowNo, long pWorkID) {
            this.Node_CCAsync(fk_flow, fk_node, workID, toEmpNo, toEmpName, msgTitle, msgDoc, pFlowNo, pWorkID, null);
        }
        
        public void Node_CCAsync(string fk_flow, int fk_node, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, string pFlowNo, long pWorkID, object userState) {
            if ((this.onBeginNode_CCDelegate == null)) {
                this.onBeginNode_CCDelegate = new BeginOperationDelegate(this.OnBeginNode_CC);
            }
            if ((this.onEndNode_CCDelegate == null)) {
                this.onEndNode_CCDelegate = new EndOperationDelegate(this.OnEndNode_CC);
            }
            if ((this.onNode_CCCompletedDelegate == null)) {
                this.onNode_CCCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_CCCompleted);
            }
            base.InvokeAsync(this.onBeginNode_CCDelegate, new object[] {
                        fk_flow,
                        fk_node,
                        workID,
                        toEmpNo,
                        toEmpName,
                        msgTitle,
                        msgDoc,
                        pFlowNo,
                        pWorkID}, this.onEndNode_CCDelegate, this.onNode_CCCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_SetDraft(string fk_flow, long workID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_SetDraft(fk_flow, workID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WorkNode.FF.CCFlowAPISoap.EndNode_SetDraft(System.IAsyncResult result) {
            base.Channel.EndNode_SetDraft(result);
        }
        
        private System.IAsyncResult OnBeginNode_SetDraft(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            long workID = ((long)(inValues[1]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_SetDraft(fk_flow, workID, callback, asyncState);
        }
        
        private object[] OnEndNode_SetDraft(System.IAsyncResult result) {
            ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_SetDraft(result);
            return null;
        }
        
        private void OnNode_SetDraftCompleted(object state) {
            if ((this.Node_SetDraftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_SetDraftCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_SetDraftAsync(string fk_flow, long workID) {
            this.Node_SetDraftAsync(fk_flow, workID, null);
        }
        
        public void Node_SetDraftAsync(string fk_flow, long workID, object userState) {
            if ((this.onBeginNode_SetDraftDelegate == null)) {
                this.onBeginNode_SetDraftDelegate = new BeginOperationDelegate(this.OnBeginNode_SetDraft);
            }
            if ((this.onEndNode_SetDraftDelegate == null)) {
                this.onEndNode_SetDraftDelegate = new EndOperationDelegate(this.OnEndNode_SetDraft);
            }
            if ((this.onNode_SetDraftCompletedDelegate == null)) {
                this.onNode_SetDraftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_SetDraftCompleted);
            }
            base.InvokeAsync(this.onBeginNode_SetDraftDelegate, new object[] {
                        fk_flow,
                        workID}, this.onEndNode_SetDraftDelegate, this.onNode_SetDraftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_UnHungUpWork(string fk_flow, long workid, string msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_UnHungUpWork(fk_flow, workid, msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WorkNode.FF.CCFlowAPISoap.EndNode_UnHungUpWork(System.IAsyncResult result) {
            base.Channel.EndNode_UnHungUpWork(result);
        }
        
        private System.IAsyncResult OnBeginNode_UnHungUpWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            long workid = ((long)(inValues[1]));
            string msg = ((string)(inValues[2]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_UnHungUpWork(fk_flow, workid, msg, callback, asyncState);
        }
        
        private object[] OnEndNode_UnHungUpWork(System.IAsyncResult result) {
            ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_UnHungUpWork(result);
            return null;
        }
        
        private void OnNode_UnHungUpWorkCompleted(object state) {
            if ((this.Node_UnHungUpWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_UnHungUpWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_UnHungUpWorkAsync(string fk_flow, long workid, string msg) {
            this.Node_UnHungUpWorkAsync(fk_flow, workid, msg, null);
        }
        
        public void Node_UnHungUpWorkAsync(string fk_flow, long workid, string msg, object userState) {
            if ((this.onBeginNode_UnHungUpWorkDelegate == null)) {
                this.onBeginNode_UnHungUpWorkDelegate = new BeginOperationDelegate(this.OnBeginNode_UnHungUpWork);
            }
            if ((this.onEndNode_UnHungUpWorkDelegate == null)) {
                this.onEndNode_UnHungUpWorkDelegate = new EndOperationDelegate(this.OnEndNode_UnHungUpWork);
            }
            if ((this.onNode_UnHungUpWorkCompletedDelegate == null)) {
                this.onNode_UnHungUpWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_UnHungUpWorkCompleted);
            }
            base.InvokeAsync(this.onBeginNode_UnHungUpWorkDelegate, new object[] {
                        fk_flow,
                        workid,
                        msg}, this.onEndNode_UnHungUpWorkDelegate, this.onNode_UnHungUpWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginFlow_DoUnSend(string fk_flow, long workid, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlow_DoUnSend(fk_flow, workid, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndFlow_DoUnSend(System.IAsyncResult result) {
            return base.Channel.EndFlow_DoUnSend(result);
        }
        
        private System.IAsyncResult OnBeginFlow_DoUnSend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            long workid = ((long)(inValues[1]));
            string userNo = ((string)(inValues[2]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginFlow_DoUnSend(fk_flow, workid, userNo, callback, asyncState);
        }
        
        private object[] OnEndFlow_DoUnSend(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndFlow_DoUnSend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlow_DoUnSendCompleted(object state) {
            if ((this.Flow_DoUnSendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Flow_DoUnSendCompleted(this, new Flow_DoUnSendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Flow_DoUnSendAsync(string fk_flow, long workid, string userNo) {
            this.Flow_DoUnSendAsync(fk_flow, workid, userNo, null);
        }
        
        public void Flow_DoUnSendAsync(string fk_flow, long workid, string userNo, object userState) {
            if ((this.onBeginFlow_DoUnSendDelegate == null)) {
                this.onBeginFlow_DoUnSendDelegate = new BeginOperationDelegate(this.OnBeginFlow_DoUnSend);
            }
            if ((this.onEndFlow_DoUnSendDelegate == null)) {
                this.onEndFlow_DoUnSendDelegate = new EndOperationDelegate(this.OnEndFlow_DoUnSend);
            }
            if ((this.onFlow_DoUnSendCompletedDelegate == null)) {
                this.onFlow_DoUnSendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlow_DoUnSendCompleted);
            }
            base.InvokeAsync(this.onBeginFlow_DoUnSendDelegate, new object[] {
                        fk_flow,
                        workid,
                        userNo}, this.onEndFlow_DoUnSendDelegate, this.onFlow_DoUnSendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_HungUpWork(string fk_flow, long workid, int wayInt, string reldata, string hungNote, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_HungUpWork(fk_flow, workid, wayInt, reldata, hungNote, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_HungUpWork(System.IAsyncResult result) {
            return base.Channel.EndNode_HungUpWork(result);
        }
        
        private System.IAsyncResult OnBeginNode_HungUpWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            long workid = ((long)(inValues[1]));
            int wayInt = ((int)(inValues[2]));
            string reldata = ((string)(inValues[3]));
            string hungNote = ((string)(inValues[4]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_HungUpWork(fk_flow, workid, wayInt, reldata, hungNote, callback, asyncState);
        }
        
        private object[] OnEndNode_HungUpWork(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_HungUpWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_HungUpWorkCompleted(object state) {
            if ((this.Node_HungUpWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_HungUpWorkCompleted(this, new Node_HungUpWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_HungUpWorkAsync(string fk_flow, long workid, int wayInt, string reldata, string hungNote) {
            this.Node_HungUpWorkAsync(fk_flow, workid, wayInt, reldata, hungNote, null);
        }
        
        public void Node_HungUpWorkAsync(string fk_flow, long workid, int wayInt, string reldata, string hungNote, object userState) {
            if ((this.onBeginNode_HungUpWorkDelegate == null)) {
                this.onBeginNode_HungUpWorkDelegate = new BeginOperationDelegate(this.OnBeginNode_HungUpWork);
            }
            if ((this.onEndNode_HungUpWorkDelegate == null)) {
                this.onEndNode_HungUpWorkDelegate = new EndOperationDelegate(this.OnEndNode_HungUpWork);
            }
            if ((this.onNode_HungUpWorkCompletedDelegate == null)) {
                this.onNode_HungUpWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_HungUpWorkCompleted);
            }
            base.InvokeAsync(this.onBeginNode_HungUpWorkDelegate, new object[] {
                        fk_flow,
                        workid,
                        wayInt,
                        reldata,
                        hungNote}, this.onEndNode_HungUpWorkDelegate, this.onNode_HungUpWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_TaskPoolTakebackOne(long workID, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_TaskPoolTakebackOne(workID, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_TaskPoolTakebackOne(System.IAsyncResult result) {
            return base.Channel.EndNode_TaskPoolTakebackOne(result);
        }
        
        private System.IAsyncResult OnBeginNode_TaskPoolTakebackOne(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long workID = ((long)(inValues[0]));
            string userNo = ((string)(inValues[1]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_TaskPoolTakebackOne(workID, userNo, callback, asyncState);
        }
        
        private object[] OnEndNode_TaskPoolTakebackOne(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_TaskPoolTakebackOne(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_TaskPoolTakebackOneCompleted(object state) {
            if ((this.Node_TaskPoolTakebackOneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_TaskPoolTakebackOneCompleted(this, new Node_TaskPoolTakebackOneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_TaskPoolTakebackOneAsync(long workID, string userNo) {
            this.Node_TaskPoolTakebackOneAsync(workID, userNo, null);
        }
        
        public void Node_TaskPoolTakebackOneAsync(long workID, string userNo, object userState) {
            if ((this.onBeginNode_TaskPoolTakebackOneDelegate == null)) {
                this.onBeginNode_TaskPoolTakebackOneDelegate = new BeginOperationDelegate(this.OnBeginNode_TaskPoolTakebackOne);
            }
            if ((this.onEndNode_TaskPoolTakebackOneDelegate == null)) {
                this.onEndNode_TaskPoolTakebackOneDelegate = new EndOperationDelegate(this.OnEndNode_TaskPoolTakebackOne);
            }
            if ((this.onNode_TaskPoolTakebackOneCompletedDelegate == null)) {
                this.onNode_TaskPoolTakebackOneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_TaskPoolTakebackOneCompleted);
            }
            base.InvokeAsync(this.onBeginNode_TaskPoolTakebackOneDelegate, new object[] {
                        workID,
                        userNo}, this.onEndNode_TaskPoolTakebackOneDelegate, this.onNode_TaskPoolTakebackOneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_TaskPoolPutOne(long workID, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_TaskPoolPutOne(workID, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_TaskPoolPutOne(System.IAsyncResult result) {
            return base.Channel.EndNode_TaskPoolPutOne(result);
        }
        
        private System.IAsyncResult OnBeginNode_TaskPoolPutOne(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long workID = ((long)(inValues[0]));
            string userNo = ((string)(inValues[1]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_TaskPoolPutOne(workID, userNo, callback, asyncState);
        }
        
        private object[] OnEndNode_TaskPoolPutOne(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_TaskPoolPutOne(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_TaskPoolPutOneCompleted(object state) {
            if ((this.Node_TaskPoolPutOneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_TaskPoolPutOneCompleted(this, new Node_TaskPoolPutOneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_TaskPoolPutOneAsync(long workID, string userNo) {
            this.Node_TaskPoolPutOneAsync(workID, userNo, null);
        }
        
        public void Node_TaskPoolPutOneAsync(long workID, string userNo, object userState) {
            if ((this.onBeginNode_TaskPoolPutOneDelegate == null)) {
                this.onBeginNode_TaskPoolPutOneDelegate = new BeginOperationDelegate(this.OnBeginNode_TaskPoolPutOne);
            }
            if ((this.onEndNode_TaskPoolPutOneDelegate == null)) {
                this.onEndNode_TaskPoolPutOneDelegate = new EndOperationDelegate(this.OnEndNode_TaskPoolPutOne);
            }
            if ((this.onNode_TaskPoolPutOneCompletedDelegate == null)) {
                this.onNode_TaskPoolPutOneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_TaskPoolPutOneCompleted);
            }
            base.InvokeAsync(this.onBeginNode_TaskPoolPutOneDelegate, new object[] {
                        workID,
                        userNo}, this.onEndNode_TaskPoolPutOneDelegate, this.onNode_TaskPoolPutOneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_Shift(long workID, string toEmp, string msg, string userNo, string sid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_Shift(workID, toEmp, msg, userNo, sid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_Shift(System.IAsyncResult result) {
            return base.Channel.EndNode_Shift(result);
        }
        
        private System.IAsyncResult OnBeginNode_Shift(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long workID = ((long)(inValues[0]));
            string toEmp = ((string)(inValues[1]));
            string msg = ((string)(inValues[2]));
            string userNo = ((string)(inValues[3]));
            string sid = ((string)(inValues[4]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_Shift(workID, toEmp, msg, userNo, sid, callback, asyncState);
        }
        
        private object[] OnEndNode_Shift(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_Shift(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_ShiftCompleted(object state) {
            if ((this.Node_ShiftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_ShiftCompleted(this, new Node_ShiftCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_ShiftAsync(long workID, string toEmp, string msg, string userNo, string sid) {
            this.Node_ShiftAsync(workID, toEmp, msg, userNo, sid, null);
        }
        
        public void Node_ShiftAsync(long workID, string toEmp, string msg, string userNo, string sid, object userState) {
            if ((this.onBeginNode_ShiftDelegate == null)) {
                this.onBeginNode_ShiftDelegate = new BeginOperationDelegate(this.OnBeginNode_Shift);
            }
            if ((this.onEndNode_ShiftDelegate == null)) {
                this.onEndNode_ShiftDelegate = new EndOperationDelegate(this.OnEndNode_Shift);
            }
            if ((this.onNode_ShiftCompletedDelegate == null)) {
                this.onNode_ShiftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_ShiftCompleted);
            }
            base.InvokeAsync(this.onBeginNode_ShiftDelegate, new object[] {
                        workID,
                        toEmp,
                        msg,
                        userNo,
                        sid}, this.onEndNode_ShiftDelegate, this.onNode_ShiftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_ReturnWork(string fk_flow, long workID, long fid, int currentNodeID, int returnToNodeID, string msg, bool isBackToThisNode, string userNo, string sid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_ReturnWork(fk_flow, workID, fid, currentNodeID, returnToNodeID, msg, isBackToThisNode, userNo, sid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_ReturnWork(System.IAsyncResult result) {
            return base.Channel.EndNode_ReturnWork(result);
        }
        
        private System.IAsyncResult OnBeginNode_ReturnWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            long workID = ((long)(inValues[1]));
            long fid = ((long)(inValues[2]));
            int currentNodeID = ((int)(inValues[3]));
            int returnToNodeID = ((int)(inValues[4]));
            string msg = ((string)(inValues[5]));
            bool isBackToThisNode = ((bool)(inValues[6]));
            string userNo = ((string)(inValues[7]));
            string sid = ((string)(inValues[8]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_ReturnWork(fk_flow, workID, fid, currentNodeID, returnToNodeID, msg, isBackToThisNode, userNo, sid, callback, asyncState);
        }
        
        private object[] OnEndNode_ReturnWork(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_ReturnWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_ReturnWorkCompleted(object state) {
            if ((this.Node_ReturnWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_ReturnWorkCompleted(this, new Node_ReturnWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_ReturnWorkAsync(string fk_flow, long workID, long fid, int currentNodeID, int returnToNodeID, string msg, bool isBackToThisNode, string userNo, string sid) {
            this.Node_ReturnWorkAsync(fk_flow, workID, fid, currentNodeID, returnToNodeID, msg, isBackToThisNode, userNo, sid, null);
        }
        
        public void Node_ReturnWorkAsync(string fk_flow, long workID, long fid, int currentNodeID, int returnToNodeID, string msg, bool isBackToThisNode, string userNo, string sid, object userState) {
            if ((this.onBeginNode_ReturnWorkDelegate == null)) {
                this.onBeginNode_ReturnWorkDelegate = new BeginOperationDelegate(this.OnBeginNode_ReturnWork);
            }
            if ((this.onEndNode_ReturnWorkDelegate == null)) {
                this.onEndNode_ReturnWorkDelegate = new EndOperationDelegate(this.OnEndNode_ReturnWork);
            }
            if ((this.onNode_ReturnWorkCompletedDelegate == null)) {
                this.onNode_ReturnWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_ReturnWorkCompleted);
            }
            base.InvokeAsync(this.onBeginNode_ReturnWorkDelegate, new object[] {
                        fk_flow,
                        workID,
                        fid,
                        currentNodeID,
                        returnToNodeID,
                        msg,
                        isBackToThisNode,
                        userNo,
                        sid}, this.onEndNode_ReturnWorkDelegate, this.onNode_ReturnWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginAlertString(string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAlertString(userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndAlertString(System.IAsyncResult result) {
            return base.Channel.EndAlertString(result);
        }
        
        private System.IAsyncResult OnBeginAlertString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginAlertString(userNo, callback, asyncState);
        }
        
        private object[] OnEndAlertString(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndAlertString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAlertStringCompleted(object state) {
            if ((this.AlertStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AlertStringCompleted(this, new AlertStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AlertStringAsync(string userNo) {
            this.AlertStringAsync(userNo, null);
        }
        
        public void AlertStringAsync(string userNo, object userState) {
            if ((this.onBeginAlertStringDelegate == null)) {
                this.onBeginAlertStringDelegate = new BeginOperationDelegate(this.OnBeginAlertString);
            }
            if ((this.onEndAlertStringDelegate == null)) {
                this.onEndAlertStringDelegate = new EndOperationDelegate(this.OnEndAlertString);
            }
            if ((this.onAlertStringCompletedDelegate == null)) {
                this.onAlertStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAlertStringCompleted);
            }
            base.InvokeAsync(this.onBeginAlertStringDelegate, new object[] {
                        userNo}, this.onEndAlertStringDelegate, this.onAlertStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginPort_Login(string userNo, string pass, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPort_Login(userNo, pass, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndPort_Login(System.IAsyncResult result) {
            return base.Channel.EndPort_Login(result);
        }
        
        private System.IAsyncResult OnBeginPort_Login(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userNo = ((string)(inValues[0]));
            string pass = ((string)(inValues[1]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginPort_Login(userNo, pass, callback, asyncState);
        }
        
        private object[] OnEndPort_Login(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndPort_Login(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPort_LoginCompleted(object state) {
            if ((this.Port_LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Port_LoginCompleted(this, new Port_LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Port_LoginAsync(string userNo, string pass) {
            this.Port_LoginAsync(userNo, pass, null);
        }
        
        public void Port_LoginAsync(string userNo, string pass, object userState) {
            if ((this.onBeginPort_LoginDelegate == null)) {
                this.onBeginPort_LoginDelegate = new BeginOperationDelegate(this.OnBeginPort_Login);
            }
            if ((this.onEndPort_LoginDelegate == null)) {
                this.onEndPort_LoginDelegate = new EndOperationDelegate(this.OnEndPort_Login);
            }
            if ((this.onPort_LoginCompletedDelegate == null)) {
                this.onPort_LoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPort_LoginCompleted);
            }
            base.InvokeAsync(this.onBeginPort_LoginDelegate, new object[] {
                        userNo,
                        pass}, this.onEndPort_LoginDelegate, this.onPort_LoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDoIt(string flag, string userNo, string sid, string val0, string val1, string val2, string val3, string val4, string val5, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoIt(flag, userNo, sid, val0, val1, val2, val3, val4, val5, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDoIt(System.IAsyncResult result) {
            return base.Channel.EndDoIt(result);
        }
        
        private System.IAsyncResult OnBeginDoIt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flag = ((string)(inValues[0]));
            string userNo = ((string)(inValues[1]));
            string sid = ((string)(inValues[2]));
            string val0 = ((string)(inValues[3]));
            string val1 = ((string)(inValues[4]));
            string val2 = ((string)(inValues[5]));
            string val3 = ((string)(inValues[6]));
            string val4 = ((string)(inValues[7]));
            string val5 = ((string)(inValues[8]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDoIt(flag, userNo, sid, val0, val1, val2, val3, val4, val5, callback, asyncState);
        }
        
        private object[] OnEndDoIt(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDoIt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoItCompleted(object state) {
            if ((this.DoItCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoItCompleted(this, new DoItCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoItAsync(string flag, string userNo, string sid, string val0, string val1, string val2, string val3, string val4, string val5) {
            this.DoItAsync(flag, userNo, sid, val0, val1, val2, val3, val4, val5, null);
        }
        
        public void DoItAsync(string flag, string userNo, string sid, string val0, string val1, string val2, string val3, string val4, string val5, object userState) {
            if ((this.onBeginDoItDelegate == null)) {
                this.onBeginDoItDelegate = new BeginOperationDelegate(this.OnBeginDoIt);
            }
            if ((this.onEndDoItDelegate == null)) {
                this.onEndDoItDelegate = new EndOperationDelegate(this.OnEndDoIt);
            }
            if ((this.onDoItCompletedDelegate == null)) {
                this.onDoItCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoItCompleted);
            }
            base.InvokeAsync(this.onBeginDoItDelegate, new object[] {
                        flag,
                        userNo,
                        sid,
                        val0,
                        val1,
                        val2,
                        val3,
                        val4,
                        val5}, this.onEndDoItDelegate, this.onDoItCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginGenerWorkNode_SL(string fk_flow, int fk_node, long workID, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerWorkNode_SL(fk_flow, fk_node, workID, fid, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndGenerWorkNode_SL(System.IAsyncResult result) {
            return base.Channel.EndGenerWorkNode_SL(result);
        }
        
        private System.IAsyncResult OnBeginGenerWorkNode_SL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int fk_node = ((int)(inValues[1]));
            long workID = ((long)(inValues[2]));
            long fid = ((long)(inValues[3]));
            string userNo = ((string)(inValues[4]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginGenerWorkNode_SL(fk_flow, fk_node, workID, fid, userNo, callback, asyncState);
        }
        
        private object[] OnEndGenerWorkNode_SL(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndGenerWorkNode_SL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerWorkNode_SLCompleted(object state) {
            if ((this.GenerWorkNode_SLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerWorkNode_SLCompleted(this, new GenerWorkNode_SLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerWorkNode_SLAsync(string fk_flow, int fk_node, long workID, long fid, string userNo) {
            this.GenerWorkNode_SLAsync(fk_flow, fk_node, workID, fid, userNo, null);
        }
        
        public void GenerWorkNode_SLAsync(string fk_flow, int fk_node, long workID, long fid, string userNo, object userState) {
            if ((this.onBeginGenerWorkNode_SLDelegate == null)) {
                this.onBeginGenerWorkNode_SLDelegate = new BeginOperationDelegate(this.OnBeginGenerWorkNode_SL);
            }
            if ((this.onEndGenerWorkNode_SLDelegate == null)) {
                this.onEndGenerWorkNode_SLDelegate = new EndOperationDelegate(this.OnEndGenerWorkNode_SL);
            }
            if ((this.onGenerWorkNode_SLCompletedDelegate == null)) {
                this.onGenerWorkNode_SLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerWorkNode_SLCompleted);
            }
            base.InvokeAsync(this.onBeginGenerWorkNode_SLDelegate, new object[] {
                        fk_flow,
                        fk_node,
                        workID,
                        fid,
                        userNo}, this.onEndGenerWorkNode_SLDelegate, this.onGenerWorkNode_SLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginGenerWorkNode_Android(string fk_flow, int fk_node, long workID, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerWorkNode_Android(fk_flow, fk_node, workID, fid, userNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndGenerWorkNode_Android(System.IAsyncResult result) {
            return base.Channel.EndGenerWorkNode_Android(result);
        }
        
        private System.IAsyncResult OnBeginGenerWorkNode_Android(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int fk_node = ((int)(inValues[1]));
            long workID = ((long)(inValues[2]));
            long fid = ((long)(inValues[3]));
            string userNo = ((string)(inValues[4]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginGenerWorkNode_Android(fk_flow, fk_node, workID, fid, userNo, callback, asyncState);
        }
        
        private object[] OnEndGenerWorkNode_Android(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndGenerWorkNode_Android(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerWorkNode_AndroidCompleted(object state) {
            if ((this.GenerWorkNode_AndroidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerWorkNode_AndroidCompleted(this, new GenerWorkNode_AndroidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerWorkNode_AndroidAsync(string fk_flow, int fk_node, long workID, long fid, string userNo) {
            this.GenerWorkNode_AndroidAsync(fk_flow, fk_node, workID, fid, userNo, null);
        }
        
        public void GenerWorkNode_AndroidAsync(string fk_flow, int fk_node, long workID, long fid, string userNo, object userState) {
            if ((this.onBeginGenerWorkNode_AndroidDelegate == null)) {
                this.onBeginGenerWorkNode_AndroidDelegate = new BeginOperationDelegate(this.OnBeginGenerWorkNode_Android);
            }
            if ((this.onEndGenerWorkNode_AndroidDelegate == null)) {
                this.onEndGenerWorkNode_AndroidDelegate = new EndOperationDelegate(this.OnEndGenerWorkNode_Android);
            }
            if ((this.onGenerWorkNode_AndroidCompletedDelegate == null)) {
                this.onGenerWorkNode_AndroidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerWorkNode_AndroidCompleted);
            }
            base.InvokeAsync(this.onBeginGenerWorkNode_AndroidDelegate, new object[] {
                        fk_flow,
                        fk_node,
                        workID,
                        fid,
                        userNo}, this.onEndGenerWorkNode_AndroidDelegate, this.onGenerWorkNode_AndroidCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_SaveWork(string fk_flow, int fk_node, long workID, string userNo, string dsXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_SaveWork(fk_flow, fk_node, workID, userNo, dsXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_SaveWork(System.IAsyncResult result) {
            return base.Channel.EndNode_SaveWork(result);
        }
        
        private System.IAsyncResult OnBeginNode_SaveWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int fk_node = ((int)(inValues[1]));
            long workID = ((long)(inValues[2]));
            string userNo = ((string)(inValues[3]));
            string dsXml = ((string)(inValues[4]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_SaveWork(fk_flow, fk_node, workID, userNo, dsXml, callback, asyncState);
        }
        
        private object[] OnEndNode_SaveWork(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_SaveWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_SaveWorkCompleted(object state) {
            if ((this.Node_SaveWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_SaveWorkCompleted(this, new Node_SaveWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_SaveWorkAsync(string fk_flow, int fk_node, long workID, string userNo, string dsXml) {
            this.Node_SaveWorkAsync(fk_flow, fk_node, workID, userNo, dsXml, null);
        }
        
        public void Node_SaveWorkAsync(string fk_flow, int fk_node, long workID, string userNo, string dsXml, object userState) {
            if ((this.onBeginNode_SaveWorkDelegate == null)) {
                this.onBeginNode_SaveWorkDelegate = new BeginOperationDelegate(this.OnBeginNode_SaveWork);
            }
            if ((this.onEndNode_SaveWorkDelegate == null)) {
                this.onEndNode_SaveWorkDelegate = new EndOperationDelegate(this.OnEndNode_SaveWork);
            }
            if ((this.onNode_SaveWorkCompletedDelegate == null)) {
                this.onNode_SaveWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_SaveWorkCompleted);
            }
            base.InvokeAsync(this.onBeginNode_SaveWorkDelegate, new object[] {
                        fk_flow,
                        fk_node,
                        workID,
                        userNo,
                        dsXml}, this.onEndNode_SaveWorkDelegate, this.onNode_SaveWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginNode_SendWork(string fk_flow, int fk_node, long workID, string dsXml, string currUserNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNode_SendWork(fk_flow, fk_node, workID, dsXml, currUserNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndNode_SendWork(System.IAsyncResult result) {
            return base.Channel.EndNode_SendWork(result);
        }
        
        private System.IAsyncResult OnBeginNode_SendWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int fk_node = ((int)(inValues[1]));
            long workID = ((long)(inValues[2]));
            string dsXml = ((string)(inValues[3]));
            string currUserNo = ((string)(inValues[4]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginNode_SendWork(fk_flow, fk_node, workID, dsXml, currUserNo, callback, asyncState);
        }
        
        private object[] OnEndNode_SendWork(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndNode_SendWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNode_SendWorkCompleted(object state) {
            if ((this.Node_SendWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Node_SendWorkCompleted(this, new Node_SendWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Node_SendWorkAsync(string fk_flow, int fk_node, long workID, string dsXml, string currUserNo) {
            this.Node_SendWorkAsync(fk_flow, fk_node, workID, dsXml, currUserNo, null);
        }
        
        public void Node_SendWorkAsync(string fk_flow, int fk_node, long workID, string dsXml, string currUserNo, object userState) {
            if ((this.onBeginNode_SendWorkDelegate == null)) {
                this.onBeginNode_SendWorkDelegate = new BeginOperationDelegate(this.OnBeginNode_SendWork);
            }
            if ((this.onEndNode_SendWorkDelegate == null)) {
                this.onEndNode_SendWorkDelegate = new EndOperationDelegate(this.OnEndNode_SendWork);
            }
            if ((this.onNode_SendWorkCompletedDelegate == null)) {
                this.onNode_SendWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNode_SendWorkCompleted);
            }
            base.InvokeAsync(this.onBeginNode_SendWorkDelegate, new object[] {
                        fk_flow,
                        fk_node,
                        workID,
                        dsXml,
                        currUserNo}, this.onEndNode_SendWorkDelegate, this.onNode_SendWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginGetNoName(string SQL, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNoName(SQL, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndGetNoName(System.IAsyncResult result) {
            return base.Channel.EndGetNoName(result);
        }
        
        private System.IAsyncResult OnBeginGetNoName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SQL = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginGetNoName(SQL, callback, asyncState);
        }
        
        private object[] OnEndGetNoName(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndGetNoName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNoNameCompleted(object state) {
            if ((this.GetNoNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNoNameCompleted(this, new GetNoNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNoNameAsync(string SQL) {
            this.GetNoNameAsync(SQL, null);
        }
        
        public void GetNoNameAsync(string SQL, object userState) {
            if ((this.onBeginGetNoNameDelegate == null)) {
                this.onBeginGetNoNameDelegate = new BeginOperationDelegate(this.OnBeginGetNoName);
            }
            if ((this.onEndGetNoNameDelegate == null)) {
                this.onEndGetNoNameDelegate = new EndOperationDelegate(this.OnEndGetNoName);
            }
            if ((this.onGetNoNameCompletedDelegate == null)) {
                this.onGetNoNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNoNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetNoNameDelegate, new object[] {
                        SQL}, this.onEndGetNoNameDelegate, this.onGetNoNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginUpload(WorkNode.FF.UploadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpload(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpload(string fileName, long offSet, byte[] intoBuffer, System.AsyncCallback callback, object asyncState) {
            WorkNode.FF.UploadRequest inValue = new WorkNode.FF.UploadRequest();
            inValue.fileName = fileName;
            inValue.offSet = offSet;
            inValue.intoBuffer = intoBuffer;
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginUpload(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkNode.FF.UploadResponse WorkNode.FF.CCFlowAPISoap.EndUpload(System.IAsyncResult result) {
            return base.Channel.EndUpload(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndUpload(System.IAsyncResult result) {
            WorkNode.FF.UploadResponse retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndUpload(result);
            return retVal.UploadResult;
        }
        
        private System.IAsyncResult OnBeginUpload(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            long offSet = ((long)(inValues[1]));
            byte[] intoBuffer = ((byte[])(inValues[2]));
            return this.BeginUpload(fileName, offSet, intoBuffer, callback, asyncState);
        }
        
        private object[] OnEndUpload(System.IAsyncResult result) {
            bool retVal = this.EndUpload(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadCompleted(object state) {
            if ((this.UploadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadCompleted(this, new UploadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadAsync(string fileName, long offSet, byte[] intoBuffer) {
            this.UploadAsync(fileName, offSet, intoBuffer, null);
        }
        
        public void UploadAsync(string fileName, long offSet, byte[] intoBuffer, object userState) {
            if ((this.onBeginUploadDelegate == null)) {
                this.onBeginUploadDelegate = new BeginOperationDelegate(this.OnBeginUpload);
            }
            if ((this.onEndUploadDelegate == null)) {
                this.onEndUploadDelegate = new EndOperationDelegate(this.OnEndUpload);
            }
            if ((this.onUploadCompletedDelegate == null)) {
                this.onUploadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDelegate, new object[] {
                        fileName,
                        offSet,
                        intoBuffer}, this.onEndUploadDelegate, this.onUploadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginParseExp(string strExp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseExp(strExp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndParseExp(System.IAsyncResult result) {
            return base.Channel.EndParseExp(result);
        }
        
        private System.IAsyncResult OnBeginParseExp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strExp = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginParseExp(strExp, callback, asyncState);
        }
        
        private object[] OnEndParseExp(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndParseExp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseExpCompleted(object state) {
            if ((this.ParseExpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseExpCompleted(this, new ParseExpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseExpAsync(string strExp) {
            this.ParseExpAsync(strExp, null);
        }
        
        public void ParseExpAsync(string strExp, object userState) {
            if ((this.onBeginParseExpDelegate == null)) {
                this.onBeginParseExpDelegate = new BeginOperationDelegate(this.OnBeginParseExp);
            }
            if ((this.onEndParseExpDelegate == null)) {
                this.onEndParseExpDelegate = new EndOperationDelegate(this.OnEndParseExp);
            }
            if ((this.onParseExpCompletedDelegate == null)) {
                this.onParseExpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseExpCompleted);
            }
            base.InvokeAsync(this.onBeginParseExpDelegate, new object[] {
                        strExp}, this.onEndParseExpDelegate, this.onParseExpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginCfgKey(string kev, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCfgKey(kev, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndCfgKey(System.IAsyncResult result) {
            return base.Channel.EndCfgKey(result);
        }
        
        private System.IAsyncResult OnBeginCfgKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string kev = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginCfgKey(kev, callback, asyncState);
        }
        
        private object[] OnEndCfgKey(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndCfgKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCfgKeyCompleted(object state) {
            if ((this.CfgKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CfgKeyCompleted(this, new CfgKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CfgKeyAsync(string kev) {
            this.CfgKeyAsync(kev, null);
        }
        
        public void CfgKeyAsync(string kev, object userState) {
            if ((this.onBeginCfgKeyDelegate == null)) {
                this.onBeginCfgKeyDelegate = new BeginOperationDelegate(this.OnBeginCfgKey);
            }
            if ((this.onEndCfgKeyDelegate == null)) {
                this.onEndCfgKeyDelegate = new EndOperationDelegate(this.OnEndCfgKey);
            }
            if ((this.onCfgKeyCompletedDelegate == null)) {
                this.onCfgKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCfgKeyCompleted);
            }
            base.InvokeAsync(this.onBeginCfgKeyDelegate, new object[] {
                        kev}, this.onEndCfgKeyDelegate, this.onCfgKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginUploadFile(WorkNode.FF.UploadFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadFile(byte[] FileByte, string fileName, System.AsyncCallback callback, object asyncState) {
            WorkNode.FF.UploadFileRequest inValue = new WorkNode.FF.UploadFileRequest();
            inValue.FileByte = FileByte;
            inValue.fileName = fileName;
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginUploadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkNode.FF.UploadFileResponse WorkNode.FF.CCFlowAPISoap.EndUploadFile(System.IAsyncResult result) {
            return base.Channel.EndUploadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadFile(System.IAsyncResult result) {
            WorkNode.FF.UploadFileResponse retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndUploadFile(result);
            return retVal.UploadFileResult;
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileByte = ((byte[])(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return this.BeginUploadFile(FileByte, fileName, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            string retVal = this.EndUploadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(byte[] FileByte, string fileName) {
            this.UploadFileAsync(FileByte, fileName, null);
        }
        
        public void UploadFileAsync(byte[] FileByte, string fileName, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        FileByte,
                        fileName}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQL(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WorkNode.FF.CCFlowAPISoap.EndRunSQL(System.IAsyncResult result) {
            return base.Channel.EndRunSQL(result);
        }
        
        private System.IAsyncResult OnBeginRunSQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQL(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQL(System.IAsyncResult result) {
            int retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLCompleted(object state) {
            if ((this.RunSQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLCompleted(this, new RunSQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLAsync(string sql) {
            this.RunSQLAsync(sql, null);
        }
        
        public void RunSQLAsync(string sql, object userState) {
            if ((this.onBeginRunSQLDelegate == null)) {
                this.onBeginRunSQLDelegate = new BeginOperationDelegate(this.OnBeginRunSQL);
            }
            if ((this.onEndRunSQLDelegate == null)) {
                this.onEndRunSQLDelegate = new EndOperationDelegate(this.OnEndRunSQL);
            }
            if ((this.onRunSQLCompletedDelegate == null)) {
                this.onRunSQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLDelegate, new object[] {
                        sql}, this.onEndRunSQLDelegate, this.onRunSQLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQLs(string sqls, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLs(sqls, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WorkNode.FF.CCFlowAPISoap.EndRunSQLs(System.IAsyncResult result) {
            return base.Channel.EndRunSQLs(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqls = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQLs(sqls, callback, asyncState);
        }
        
        private object[] OnEndRunSQLs(System.IAsyncResult result) {
            int retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQLs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLsCompleted(object state) {
            if ((this.RunSQLsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLsCompleted(this, new RunSQLsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLsAsync(string sqls) {
            this.RunSQLsAsync(sqls, null);
        }
        
        public void RunSQLsAsync(string sqls, object userState) {
            if ((this.onBeginRunSQLsDelegate == null)) {
                this.onBeginRunSQLsDelegate = new BeginOperationDelegate(this.OnBeginRunSQLs);
            }
            if ((this.onEndRunSQLsDelegate == null)) {
                this.onEndRunSQLsDelegate = new EndOperationDelegate(this.OnEndRunSQLs);
            }
            if ((this.onRunSQLsCompletedDelegate == null)) {
                this.onRunSQLsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLsCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLsDelegate, new object[] {
                        sqls}, this.onEndRunSQLsDelegate, this.onRunSQLsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTable(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndRunSQLReturnTable(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTable(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQLReturnTable(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTable(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQLReturnTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableCompleted(object state) {
            if ((this.RunSQLReturnTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableCompleted(this, new RunSQLReturnTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableAsync(string sql) {
            this.RunSQLReturnTableAsync(sql, null);
        }
        
        public void RunSQLReturnTableAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnTableDelegate == null)) {
                this.onBeginRunSQLReturnTableDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTable);
            }
            if ((this.onEndRunSQLReturnTableDelegate == null)) {
                this.onEndRunSQLReturnTableDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTable);
            }
            if ((this.onRunSQLReturnTableCompletedDelegate == null)) {
                this.onRunSQLReturnTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnTableDelegate, this.onRunSQLReturnTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQLReturnTable2DataTable(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTable2DataTable(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult WorkNode.FF.CCFlowAPISoap.EndRunSQLReturnTable2DataTable(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTable2DataTable(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTable2DataTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQLReturnTable2DataTable(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTable2DataTable(System.IAsyncResult result) {
            WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQLReturnTable2DataTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTable2DataTableCompleted(object state) {
            if ((this.RunSQLReturnTable2DataTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTable2DataTableCompleted(this, new RunSQLReturnTable2DataTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTable2DataTableAsync(string sql) {
            this.RunSQLReturnTable2DataTableAsync(sql, null);
        }
        
        public void RunSQLReturnTable2DataTableAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnTable2DataTableDelegate == null)) {
                this.onBeginRunSQLReturnTable2DataTableDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTable2DataTable);
            }
            if ((this.onEndRunSQLReturnTable2DataTableDelegate == null)) {
                this.onEndRunSQLReturnTable2DataTableDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTable2DataTable);
            }
            if ((this.onRunSQLReturnTable2DataTableCompletedDelegate == null)) {
                this.onRunSQLReturnTable2DataTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTable2DataTableCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTable2DataTableDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnTable2DataTableDelegate, this.onRunSQLReturnTable2DataTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQLReturnString(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnString(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndRunSQLReturnString(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnString(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQLReturnString(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnString(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQLReturnString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnStringCompleted(object state) {
            if ((this.RunSQLReturnStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnStringCompleted(this, new RunSQLReturnStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnStringAsync(string sql) {
            this.RunSQLReturnStringAsync(sql, null);
        }
        
        public void RunSQLReturnStringAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnStringDelegate == null)) {
                this.onBeginRunSQLReturnStringDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnString);
            }
            if ((this.onEndRunSQLReturnStringDelegate == null)) {
                this.onEndRunSQLReturnStringDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnString);
            }
            if ((this.onRunSQLReturnStringCompletedDelegate == null)) {
                this.onRunSQLReturnStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnStringCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnStringDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnStringDelegate, this.onRunSQLReturnStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQLReturnValInt(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnValInt(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WorkNode.FF.CCFlowAPISoap.EndRunSQLReturnValInt(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnValInt(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnValInt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQLReturnValInt(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnValInt(System.IAsyncResult result) {
            int retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQLReturnValInt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnValIntCompleted(object state) {
            if ((this.RunSQLReturnValIntCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnValIntCompleted(this, new RunSQLReturnValIntCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnValIntAsync(string sql) {
            this.RunSQLReturnValIntAsync(sql, null);
        }
        
        public void RunSQLReturnValIntAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnValIntDelegate == null)) {
                this.onBeginRunSQLReturnValIntDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnValInt);
            }
            if ((this.onEndRunSQLReturnValIntDelegate == null)) {
                this.onEndRunSQLReturnValIntDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnValInt);
            }
            if ((this.onRunSQLReturnValIntCompletedDelegate == null)) {
                this.onRunSQLReturnValIntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnValIntCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnValIntDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnValIntDelegate, this.onRunSQLReturnValIntCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQLReturnValFloat(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnValFloat(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        float WorkNode.FF.CCFlowAPISoap.EndRunSQLReturnValFloat(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnValFloat(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnValFloat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQLReturnValFloat(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnValFloat(System.IAsyncResult result) {
            float retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQLReturnValFloat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnValFloatCompleted(object state) {
            if ((this.RunSQLReturnValFloatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnValFloatCompleted(this, new RunSQLReturnValFloatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnValFloatAsync(string sql) {
            this.RunSQLReturnValFloatAsync(sql, null);
        }
        
        public void RunSQLReturnValFloatAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnValFloatDelegate == null)) {
                this.onBeginRunSQLReturnValFloatDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnValFloat);
            }
            if ((this.onEndRunSQLReturnValFloatDelegate == null)) {
                this.onEndRunSQLReturnValFloatDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnValFloat);
            }
            if ((this.onRunSQLReturnValFloatCompletedDelegate == null)) {
                this.onRunSQLReturnValFloatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnValFloatCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnValFloatDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnValFloatDelegate, this.onRunSQLReturnValFloatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRunSQLReturnTableS(string sqls, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTableS(sqls, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndRunSQLReturnTableS(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTableS(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTableS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqls = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRunSQLReturnTableS(sqls, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTableS(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRunSQLReturnTableS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableSCompleted(object state) {
            if ((this.RunSQLReturnTableSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableSCompleted(this, new RunSQLReturnTableSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableSAsync(string sqls) {
            this.RunSQLReturnTableSAsync(sqls, null);
        }
        
        public void RunSQLReturnTableSAsync(string sqls, object userState) {
            if ((this.onBeginRunSQLReturnTableSDelegate == null)) {
                this.onBeginRunSQLReturnTableSDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTableS);
            }
            if ((this.onEndRunSQLReturnTableSDelegate == null)) {
                this.onEndRunSQLReturnTableSDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTableS);
            }
            if ((this.onRunSQLReturnTableSCompletedDelegate == null)) {
                this.onRunSQLReturnTableSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableSCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableSDelegate, new object[] {
                        sqls}, this.onEndRunSQLReturnTableSDelegate, this.onRunSQLReturnTableSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginParseStringToPinyin(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseStringToPinyin(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndParseStringToPinyin(System.IAsyncResult result) {
            return base.Channel.EndParseStringToPinyin(result);
        }
        
        private System.IAsyncResult OnBeginParseStringToPinyin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginParseStringToPinyin(name, callback, asyncState);
        }
        
        private object[] OnEndParseStringToPinyin(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndParseStringToPinyin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseStringToPinyinCompleted(object state) {
            if ((this.ParseStringToPinyinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseStringToPinyinCompleted(this, new ParseStringToPinyinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseStringToPinyinAsync(string name) {
            this.ParseStringToPinyinAsync(name, null);
        }
        
        public void ParseStringToPinyinAsync(string name, object userState) {
            if ((this.onBeginParseStringToPinyinDelegate == null)) {
                this.onBeginParseStringToPinyinDelegate = new BeginOperationDelegate(this.OnBeginParseStringToPinyin);
            }
            if ((this.onEndParseStringToPinyinDelegate == null)) {
                this.onEndParseStringToPinyinDelegate = new EndOperationDelegate(this.OnEndParseStringToPinyin);
            }
            if ((this.onParseStringToPinyinCompletedDelegate == null)) {
                this.onParseStringToPinyinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseStringToPinyinCompleted);
            }
            base.InvokeAsync(this.onBeginParseStringToPinyinDelegate, new object[] {
                        name}, this.onEndParseStringToPinyinDelegate, this.onParseStringToPinyinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEnum(enumKey, enumLab, cfg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndSaveEnum(System.IAsyncResult result) {
            return base.Channel.EndSaveEnum(result);
        }
        
        private System.IAsyncResult OnBeginSaveEnum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string enumKey = ((string)(inValues[0]));
            string enumLab = ((string)(inValues[1]));
            string cfg = ((string)(inValues[2]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginSaveEnum(enumKey, enumLab, cfg, callback, asyncState);
        }
        
        private object[] OnEndSaveEnum(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndSaveEnum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnumCompleted(object state) {
            if ((this.SaveEnumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnumCompleted(this, new SaveEnumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnumAsync(string enumKey, string enumLab, string cfg) {
            this.SaveEnumAsync(enumKey, enumLab, cfg, null);
        }
        
        public void SaveEnumAsync(string enumKey, string enumLab, string cfg, object userState) {
            if ((this.onBeginSaveEnumDelegate == null)) {
                this.onBeginSaveEnumDelegate = new BeginOperationDelegate(this.OnBeginSaveEnum);
            }
            if ((this.onEndSaveEnumDelegate == null)) {
                this.onEndSaveEnumDelegate = new EndOperationDelegate(this.OnEndSaveEnum);
            }
            if ((this.onSaveEnumCompletedDelegate == null)) {
                this.onSaveEnumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnumCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnumDelegate, new object[] {
                        enumKey,
                        enumLab,
                        cfg}, this.onEndSaveEnumDelegate, this.onSaveEnumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginSaveEnumField(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEnumField(fk_mapData, fieldKey, fieldName, enumKey, x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndSaveEnumField(System.IAsyncResult result) {
            return base.Channel.EndSaveEnumField(result);
        }
        
        private System.IAsyncResult OnBeginSaveEnumField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapData = ((string)(inValues[0]));
            string fieldKey = ((string)(inValues[1]));
            string fieldName = ((string)(inValues[2]));
            string enumKey = ((string)(inValues[3]));
            double x = ((double)(inValues[4]));
            double y = ((double)(inValues[5]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginSaveEnumField(fk_mapData, fieldKey, fieldName, enumKey, x, y, callback, asyncState);
        }
        
        private object[] OnEndSaveEnumField(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndSaveEnumField(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnumFieldCompleted(object state) {
            if ((this.SaveEnumFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnumFieldCompleted(this, new SaveEnumFieldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnumFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y) {
            this.SaveEnumFieldAsync(fk_mapData, fieldKey, fieldName, enumKey, x, y, null);
        }
        
        public void SaveEnumFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, object userState) {
            if ((this.onBeginSaveEnumFieldDelegate == null)) {
                this.onBeginSaveEnumFieldDelegate = new BeginOperationDelegate(this.OnBeginSaveEnumField);
            }
            if ((this.onEndSaveEnumFieldDelegate == null)) {
                this.onEndSaveEnumFieldDelegate = new EndOperationDelegate(this.OnEndSaveEnumField);
            }
            if ((this.onSaveEnumFieldCompletedDelegate == null)) {
                this.onSaveEnumFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnumFieldCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnumFieldDelegate, new object[] {
                        fk_mapData,
                        fieldKey,
                        fieldName,
                        enumKey,
                        x,
                        y}, this.onEndSaveEnumFieldDelegate, this.onSaveEnumFieldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginSaveFKField(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveFKField(fk_mapData, fieldKey, fieldName, enName, x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndSaveFKField(System.IAsyncResult result) {
            return base.Channel.EndSaveFKField(result);
        }
        
        private System.IAsyncResult OnBeginSaveFKField(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapData = ((string)(inValues[0]));
            string fieldKey = ((string)(inValues[1]));
            string fieldName = ((string)(inValues[2]));
            string enName = ((string)(inValues[3]));
            double x = ((double)(inValues[4]));
            double y = ((double)(inValues[5]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginSaveFKField(fk_mapData, fieldKey, fieldName, enName, x, y, callback, asyncState);
        }
        
        private object[] OnEndSaveFKField(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndSaveFKField(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveFKFieldCompleted(object state) {
            if ((this.SaveFKFieldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveFKFieldCompleted(this, new SaveFKFieldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveFKFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y) {
            this.SaveFKFieldAsync(fk_mapData, fieldKey, fieldName, enName, x, y, null);
        }
        
        public void SaveFKFieldAsync(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, object userState) {
            if ((this.onBeginSaveFKFieldDelegate == null)) {
                this.onBeginSaveFKFieldDelegate = new BeginOperationDelegate(this.OnBeginSaveFKField);
            }
            if ((this.onEndSaveFKFieldDelegate == null)) {
                this.onEndSaveFKFieldDelegate = new EndOperationDelegate(this.OnEndSaveFKField);
            }
            if ((this.onSaveFKFieldCompletedDelegate == null)) {
                this.onSaveFKFieldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveFKFieldCompleted);
            }
            base.InvokeAsync(this.onBeginSaveFKFieldDelegate, new object[] {
                        fk_mapData,
                        fieldKey,
                        fieldName,
                        enName,
                        x,
                        y}, this.onEndSaveFKFieldDelegate, this.onSaveFKFieldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginSaveImageAsFile(WorkNode.FF.SaveImageAsFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveImageAsFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveImageAsFile(byte[] img, string pkval, string fk_Frm_Ele, System.AsyncCallback callback, object asyncState) {
            WorkNode.FF.SaveImageAsFileRequest inValue = new WorkNode.FF.SaveImageAsFileRequest();
            inValue.img = img;
            inValue.pkval = pkval;
            inValue.fk_Frm_Ele = fk_Frm_Ele;
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginSaveImageAsFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkNode.FF.SaveImageAsFileResponse WorkNode.FF.CCFlowAPISoap.EndSaveImageAsFile(System.IAsyncResult result) {
            return base.Channel.EndSaveImageAsFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndSaveImageAsFile(System.IAsyncResult result) {
            WorkNode.FF.SaveImageAsFileResponse retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndSaveImageAsFile(result);
            return retVal.SaveImageAsFileResult;
        }
        
        private System.IAsyncResult OnBeginSaveImageAsFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] img = ((byte[])(inValues[0]));
            string pkval = ((string)(inValues[1]));
            string fk_Frm_Ele = ((string)(inValues[2]));
            return this.BeginSaveImageAsFile(img, pkval, fk_Frm_Ele, callback, asyncState);
        }
        
        private object[] OnEndSaveImageAsFile(System.IAsyncResult result) {
            string retVal = this.EndSaveImageAsFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveImageAsFileCompleted(object state) {
            if ((this.SaveImageAsFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveImageAsFileCompleted(this, new SaveImageAsFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveImageAsFileAsync(byte[] img, string pkval, string fk_Frm_Ele) {
            this.SaveImageAsFileAsync(img, pkval, fk_Frm_Ele, null);
        }
        
        public void SaveImageAsFileAsync(byte[] img, string pkval, string fk_Frm_Ele, object userState) {
            if ((this.onBeginSaveImageAsFileDelegate == null)) {
                this.onBeginSaveImageAsFileDelegate = new BeginOperationDelegate(this.OnBeginSaveImageAsFile);
            }
            if ((this.onEndSaveImageAsFileDelegate == null)) {
                this.onEndSaveImageAsFileDelegate = new EndOperationDelegate(this.OnEndSaveImageAsFile);
            }
            if ((this.onSaveImageAsFileCompletedDelegate == null)) {
                this.onSaveImageAsFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveImageAsFileCompleted);
            }
            base.InvokeAsync(this.onBeginSaveImageAsFileDelegate, new object[] {
                        img,
                        pkval,
                        fk_Frm_Ele}, this.onEndSaveImageAsFileDelegate, this.onSaveImageAsFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginLoadFrmTemplete(WorkNode.FF.LoadFrmTempleteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadFrmTemplete(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginLoadFrmTemplete(byte[] fileByte, string fk_mapData, bool isClear, System.AsyncCallback callback, object asyncState) {
            WorkNode.FF.LoadFrmTempleteRequest inValue = new WorkNode.FF.LoadFrmTempleteRequest();
            inValue.fileByte = fileByte;
            inValue.fk_mapData = fk_mapData;
            inValue.isClear = isClear;
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginLoadFrmTemplete(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkNode.FF.LoadFrmTempleteResponse WorkNode.FF.CCFlowAPISoap.EndLoadFrmTemplete(System.IAsyncResult result) {
            return base.Channel.EndLoadFrmTemplete(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndLoadFrmTemplete(System.IAsyncResult result) {
            WorkNode.FF.LoadFrmTempleteResponse retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndLoadFrmTemplete(result);
            return retVal.LoadFrmTempleteResult;
        }
        
        private System.IAsyncResult OnBeginLoadFrmTemplete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] fileByte = ((byte[])(inValues[0]));
            string fk_mapData = ((string)(inValues[1]));
            bool isClear = ((bool)(inValues[2]));
            return this.BeginLoadFrmTemplete(fileByte, fk_mapData, isClear, callback, asyncState);
        }
        
        private object[] OnEndLoadFrmTemplete(System.IAsyncResult result) {
            string retVal = this.EndLoadFrmTemplete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadFrmTempleteCompleted(object state) {
            if ((this.LoadFrmTempleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadFrmTempleteCompleted(this, new LoadFrmTempleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadFrmTempleteAsync(byte[] fileByte, string fk_mapData, bool isClear) {
            this.LoadFrmTempleteAsync(fileByte, fk_mapData, isClear, null);
        }
        
        public void LoadFrmTempleteAsync(byte[] fileByte, string fk_mapData, bool isClear, object userState) {
            if ((this.onBeginLoadFrmTempleteDelegate == null)) {
                this.onBeginLoadFrmTempleteDelegate = new BeginOperationDelegate(this.OnBeginLoadFrmTemplete);
            }
            if ((this.onEndLoadFrmTempleteDelegate == null)) {
                this.onEndLoadFrmTempleteDelegate = new EndOperationDelegate(this.OnEndLoadFrmTemplete);
            }
            if ((this.onLoadFrmTempleteCompletedDelegate == null)) {
                this.onLoadFrmTempleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadFrmTempleteCompleted);
            }
            base.InvokeAsync(this.onBeginLoadFrmTempleteDelegate, new object[] {
                        fileByte,
                        fk_mapData,
                        isClear}, this.onEndLoadFrmTempleteDelegate, this.onLoadFrmTempleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginLoadFrmTempleteFile(string file, string fk_mapData, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadFrmTempleteFile(file, fk_mapData, isClear, isSetReadonly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndLoadFrmTempleteFile(System.IAsyncResult result) {
            return base.Channel.EndLoadFrmTempleteFile(result);
        }
        
        private System.IAsyncResult OnBeginLoadFrmTempleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string file = ((string)(inValues[0]));
            string fk_mapData = ((string)(inValues[1]));
            bool isClear = ((bool)(inValues[2]));
            bool isSetReadonly = ((bool)(inValues[3]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginLoadFrmTempleteFile(file, fk_mapData, isClear, isSetReadonly, callback, asyncState);
        }
        
        private object[] OnEndLoadFrmTempleteFile(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndLoadFrmTempleteFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadFrmTempleteFileCompleted(object state) {
            if ((this.LoadFrmTempleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadFrmTempleteFileCompleted(this, new LoadFrmTempleteFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadFrmTempleteFileAsync(string file, string fk_mapData, bool isClear, bool isSetReadonly) {
            this.LoadFrmTempleteFileAsync(file, fk_mapData, isClear, isSetReadonly, null);
        }
        
        public void LoadFrmTempleteFileAsync(string file, string fk_mapData, bool isClear, bool isSetReadonly, object userState) {
            if ((this.onBeginLoadFrmTempleteFileDelegate == null)) {
                this.onBeginLoadFrmTempleteFileDelegate = new BeginOperationDelegate(this.OnBeginLoadFrmTempleteFile);
            }
            if ((this.onEndLoadFrmTempleteFileDelegate == null)) {
                this.onEndLoadFrmTempleteFileDelegate = new EndOperationDelegate(this.OnEndLoadFrmTempleteFile);
            }
            if ((this.onLoadFrmTempleteFileCompletedDelegate == null)) {
                this.onLoadFrmTempleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadFrmTempleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginLoadFrmTempleteFileDelegate, new object[] {
                        file,
                        fk_mapData,
                        isClear,
                        isSetReadonly}, this.onEndLoadFrmTempleteFileDelegate, this.onLoadFrmTempleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginGetXmlData(string xmlFileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetXmlData(xmlFileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndGetXmlData(System.IAsyncResult result) {
            return base.Channel.EndGetXmlData(result);
        }
        
        private System.IAsyncResult OnBeginGetXmlData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xmlFileName = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginGetXmlData(xmlFileName, callback, asyncState);
        }
        
        private object[] OnEndGetXmlData(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndGetXmlData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetXmlDataCompleted(object state) {
            if ((this.GetXmlDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetXmlDataCompleted(this, new GetXmlDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetXmlDataAsync(string xmlFileName) {
            this.GetXmlDataAsync(xmlFileName, null);
        }
        
        public void GetXmlDataAsync(string xmlFileName, object userState) {
            if ((this.onBeginGetXmlDataDelegate == null)) {
                this.onBeginGetXmlDataDelegate = new BeginOperationDelegate(this.OnBeginGetXmlData);
            }
            if ((this.onEndGetXmlDataDelegate == null)) {
                this.onEndGetXmlDataDelegate = new EndOperationDelegate(this.OnEndGetXmlData);
            }
            if ((this.onGetXmlDataCompletedDelegate == null)) {
                this.onGetXmlDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetXmlDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetXmlDataDelegate, new object[] {
                        xmlFileName}, this.onEndGetXmlDataDelegate, this.onGetXmlDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginDoType(string dotype, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoType(dotype, v1, v2, v3, v4, v5, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndDoType(System.IAsyncResult result) {
            return base.Channel.EndDoType(result);
        }
        
        private System.IAsyncResult OnBeginDoType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dotype = ((string)(inValues[0]));
            string v1 = ((string)(inValues[1]));
            string v2 = ((string)(inValues[2]));
            string v3 = ((string)(inValues[3]));
            string v4 = ((string)(inValues[4]));
            string v5 = ((string)(inValues[5]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginDoType(dotype, v1, v2, v3, v4, v5, callback, asyncState);
        }
        
        private object[] OnEndDoType(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndDoType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoTypeCompleted(object state) {
            if ((this.DoTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoTypeCompleted(this, new DoTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoTypeAsync(string dotype, string v1, string v2, string v3, string v4, string v5) {
            this.DoTypeAsync(dotype, v1, v2, v3, v4, v5, null);
        }
        
        public void DoTypeAsync(string dotype, string v1, string v2, string v3, string v4, string v5, object userState) {
            if ((this.onBeginDoTypeDelegate == null)) {
                this.onBeginDoTypeDelegate = new BeginOperationDelegate(this.OnBeginDoType);
            }
            if ((this.onEndDoTypeDelegate == null)) {
                this.onEndDoTypeDelegate = new EndOperationDelegate(this.OnEndDoType);
            }
            if ((this.onDoTypeCompletedDelegate == null)) {
                this.onDoTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDoTypeDelegate, new object[] {
                        dotype,
                        v1,
                        v2,
                        v3,
                        v4,
                        v5}, this.onEndDoTypeDelegate, this.onDoTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEn(vals, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndSaveEn(System.IAsyncResult result) {
            return base.Channel.EndSaveEn(result);
        }
        
        private System.IAsyncResult OnBeginSaveEn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vals = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginSaveEn(vals, callback, asyncState);
        }
        
        private object[] OnEndSaveEn(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndSaveEn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnCompleted(object state) {
            if ((this.SaveEnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnCompleted(this, new SaveEnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnAsync(string vals) {
            this.SaveEnAsync(vals, null);
        }
        
        public void SaveEnAsync(string vals, object userState) {
            if ((this.onBeginSaveEnDelegate == null)) {
                this.onBeginSaveEnDelegate = new BeginOperationDelegate(this.OnBeginSaveEn);
            }
            if ((this.onEndSaveEnDelegate == null)) {
                this.onEndSaveEnDelegate = new EndOperationDelegate(this.OnEndSaveEn);
            }
            if ((this.onSaveEnCompletedDelegate == null)) {
                this.onSaveEnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnDelegate, new object[] {
                        vals}, this.onEndSaveEnDelegate, this.onSaveEnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginFtpMethod(string doType, string v1, string v2, string v3, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFtpMethod(doType, v1, v2, v3, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndFtpMethod(System.IAsyncResult result) {
            return base.Channel.EndFtpMethod(result);
        }
        
        private System.IAsyncResult OnBeginFtpMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string doType = ((string)(inValues[0]));
            string v1 = ((string)(inValues[1]));
            string v2 = ((string)(inValues[2]));
            string v3 = ((string)(inValues[3]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginFtpMethod(doType, v1, v2, v3, callback, asyncState);
        }
        
        private object[] OnEndFtpMethod(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndFtpMethod(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFtpMethodCompleted(object state) {
            if ((this.FtpMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FtpMethodCompleted(this, new FtpMethodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FtpMethodAsync(string doType, string v1, string v2, string v3) {
            this.FtpMethodAsync(doType, v1, v2, v3, null);
        }
        
        public void FtpMethodAsync(string doType, string v1, string v2, string v3, object userState) {
            if ((this.onBeginFtpMethodDelegate == null)) {
                this.onBeginFtpMethodDelegate = new BeginOperationDelegate(this.OnBeginFtpMethod);
            }
            if ((this.onEndFtpMethodDelegate == null)) {
                this.onEndFtpMethodDelegate = new EndOperationDelegate(this.OnEndFtpMethod);
            }
            if ((this.onFtpMethodCompletedDelegate == null)) {
                this.onFtpMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFtpMethodCompleted);
            }
            base.InvokeAsync(this.onBeginFtpMethodDelegate, new object[] {
                        doType,
                        v1,
                        v2,
                        v3}, this.onEndFtpMethodDelegate, this.onFtpMethodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginRequestSFTableV1(string uiBindKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestSFTableV1(uiBindKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndRequestSFTableV1(System.IAsyncResult result) {
            return base.Channel.EndRequestSFTableV1(result);
        }
        
        private System.IAsyncResult OnBeginRequestSFTableV1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string uiBindKey = ((string)(inValues[0]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginRequestSFTableV1(uiBindKey, callback, asyncState);
        }
        
        private object[] OnEndRequestSFTableV1(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndRequestSFTableV1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestSFTableV1Completed(object state) {
            if ((this.RequestSFTableV1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestSFTableV1Completed(this, new RequestSFTableV1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestSFTableV1Async(string uiBindKey) {
            this.RequestSFTableV1Async(uiBindKey, null);
        }
        
        public void RequestSFTableV1Async(string uiBindKey, object userState) {
            if ((this.onBeginRequestSFTableV1Delegate == null)) {
                this.onBeginRequestSFTableV1Delegate = new BeginOperationDelegate(this.OnBeginRequestSFTableV1);
            }
            if ((this.onEndRequestSFTableV1Delegate == null)) {
                this.onEndRequestSFTableV1Delegate = new EndOperationDelegate(this.OnEndRequestSFTableV1);
            }
            if ((this.onRequestSFTableV1CompletedDelegate == null)) {
                this.onRequestSFTableV1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestSFTableV1Completed);
            }
            base.InvokeAsync(this.onBeginRequestSFTableV1Delegate, new object[] {
                        uiBindKey}, this.onEndRequestSFTableV1Delegate, this.onRequestSFTableV1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginGenerFrm(string fk_mapdata, int workID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerFrm(fk_mapdata, workID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndGenerFrm(System.IAsyncResult result) {
            return base.Channel.EndGenerFrm(result);
        }
        
        private System.IAsyncResult OnBeginGenerFrm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapdata = ((string)(inValues[0]));
            int workID = ((int)(inValues[1]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginGenerFrm(fk_mapdata, workID, callback, asyncState);
        }
        
        private object[] OnEndGenerFrm(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndGenerFrm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerFrmCompleted(object state) {
            if ((this.GenerFrmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerFrmCompleted(this, new GenerFrmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerFrmAsync(string fk_mapdata, int workID) {
            this.GenerFrmAsync(fk_mapdata, workID, null);
        }
        
        public void GenerFrmAsync(string fk_mapdata, int workID, object userState) {
            if ((this.onBeginGenerFrmDelegate == null)) {
                this.onBeginGenerFrmDelegate = new BeginOperationDelegate(this.OnBeginGenerFrm);
            }
            if ((this.onEndGenerFrmDelegate == null)) {
                this.onEndGenerFrmDelegate = new EndOperationDelegate(this.OnEndGenerFrm);
            }
            if ((this.onGenerFrmCompletedDelegate == null)) {
                this.onGenerFrmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerFrmCompleted);
            }
            base.InvokeAsync(this.onBeginGenerFrmDelegate, new object[] {
                        fk_mapdata,
                        workID}, this.onEndGenerFrmDelegate, this.onGenerFrmCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginCopyFrm(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyFrm(fromMapData, fk_mapdata, isClear, isSetReadonly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndCopyFrm(System.IAsyncResult result) {
            return base.Channel.EndCopyFrm(result);
        }
        
        private System.IAsyncResult OnBeginCopyFrm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fromMapData = ((string)(inValues[0]));
            string fk_mapdata = ((string)(inValues[1]));
            bool isClear = ((bool)(inValues[2]));
            bool isSetReadonly = ((bool)(inValues[3]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginCopyFrm(fromMapData, fk_mapdata, isClear, isSetReadonly, callback, asyncState);
        }
        
        private object[] OnEndCopyFrm(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndCopyFrm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyFrmCompleted(object state) {
            if ((this.CopyFrmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyFrmCompleted(this, new CopyFrmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyFrmAsync(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly) {
            this.CopyFrmAsync(fromMapData, fk_mapdata, isClear, isSetReadonly, null);
        }
        
        public void CopyFrmAsync(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, object userState) {
            if ((this.onBeginCopyFrmDelegate == null)) {
                this.onBeginCopyFrmDelegate = new BeginOperationDelegate(this.OnBeginCopyFrm);
            }
            if ((this.onEndCopyFrmDelegate == null)) {
                this.onEndCopyFrmDelegate = new EndOperationDelegate(this.OnEndCopyFrm);
            }
            if ((this.onCopyFrmCompletedDelegate == null)) {
                this.onCopyFrmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyFrmCompleted);
            }
            base.InvokeAsync(this.onBeginCopyFrmDelegate, new object[] {
                        fromMapData,
                        fk_mapdata,
                        isClear,
                        isSetReadonly}, this.onEndCopyFrmDelegate, this.onCopyFrmCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorkNode.FF.CCFlowAPISoap.BeginSaveFrm(string fk_mapdata, string xml, string sqls, string mapAttrKeyName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveFrm(fk_mapdata, xml, sqls, mapAttrKeyName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WorkNode.FF.CCFlowAPISoap.EndSaveFrm(System.IAsyncResult result) {
            return base.Channel.EndSaveFrm(result);
        }
        
        private System.IAsyncResult OnBeginSaveFrm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_mapdata = ((string)(inValues[0]));
            string xml = ((string)(inValues[1]));
            string sqls = ((string)(inValues[2]));
            string mapAttrKeyName = ((string)(inValues[3]));
            return ((WorkNode.FF.CCFlowAPISoap)(this)).BeginSaveFrm(fk_mapdata, xml, sqls, mapAttrKeyName, callback, asyncState);
        }
        
        private object[] OnEndSaveFrm(System.IAsyncResult result) {
            string retVal = ((WorkNode.FF.CCFlowAPISoap)(this)).EndSaveFrm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveFrmCompleted(object state) {
            if ((this.SaveFrmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveFrmCompleted(this, new SaveFrmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveFrmAsync(string fk_mapdata, string xml, string sqls, string mapAttrKeyName) {
            this.SaveFrmAsync(fk_mapdata, xml, sqls, mapAttrKeyName, null);
        }
        
        public void SaveFrmAsync(string fk_mapdata, string xml, string sqls, string mapAttrKeyName, object userState) {
            if ((this.onBeginSaveFrmDelegate == null)) {
                this.onBeginSaveFrmDelegate = new BeginOperationDelegate(this.OnBeginSaveFrm);
            }
            if ((this.onEndSaveFrmDelegate == null)) {
                this.onEndSaveFrmDelegate = new EndOperationDelegate(this.OnEndSaveFrm);
            }
            if ((this.onSaveFrmCompletedDelegate == null)) {
                this.onSaveFrmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveFrmCompleted);
            }
            base.InvokeAsync(this.onBeginSaveFrmDelegate, new object[] {
                        fk_mapdata,
                        xml,
                        sqls,
                        mapAttrKeyName}, this.onEndSaveFrmDelegate, this.onSaveFrmCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WorkNode.FF.CCFlowAPISoap CreateChannel() {
            return new CCFlowAPISoapClientChannel(this);
        }
        
        private class CCFlowAPISoapClientChannel : ChannelBase<WorkNode.FF.CCFlowAPISoap>, WorkNode.FF.CCFlowAPISoap {
            
            public CCFlowAPISoapClientChannel(System.ServiceModel.ClientBase<WorkNode.FF.CCFlowAPISoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginFlow_DoPress(long workid, string msg, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = workid;
                _args[1] = msg;
                _args[2] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("Flow_DoPress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFlow_DoPress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Flow_DoPress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPort_SigOut(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("Port_SigOut", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPort_SigOut(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Port_SigOut", _args, result);
            }
            
            public System.IAsyncResult BeginPort_Menu(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("Port_Menu", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPort_Menu(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Port_Menu", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPort_ChangePassword(string userNo, string oldPass, string newPass, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userNo;
                _args[1] = oldPass;
                _args[2] = newPass;
                System.IAsyncResult _result = base.BeginInvoke("Port_ChangePassword", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPort_ChangePassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Port_ChangePassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPort_SMS(string userNo, string lastTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userNo;
                _args[1] = lastTime;
                System.IAsyncResult _result = base.BeginInvoke("Port_SMS", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPort_SMS(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Port_SMS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPort_SMS_DB(string userNo, string lastTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userNo;
                _args[1] = lastTime;
                System.IAsyncResult _result = base.BeginInvoke("Port_SMS_DB", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPort_SMS_DB(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Port_SMS_DB", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_GenerWillReturnNodes(int nodeID, long workid, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = nodeID;
                _args[1] = workid;
                _args[2] = fid;
                _args[3] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_GenerWillReturnNodes", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_GenerWillReturnNodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_GenerWillReturnNodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDataTable_DB_GenerWillReturnNodes(int nodeID, long workid, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = nodeID;
                _args[1] = workid;
                _args[2] = fid;
                _args[3] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DataTable_DB_GenerWillReturnNodes", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDataTable_DB_GenerWillReturnNodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DataTable_DB_GenerWillReturnNodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_TaskPool(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_TaskPool", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_TaskPool(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_TaskPool", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_TaskPoolOfMyApply(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_TaskPoolOfMyApply", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_TaskPoolOfMyApply(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_TaskPoolOfMyApply", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_GenerCanStartFlowsOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_GenerCanStartFlowsOfDataTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_GenerCanStartFlowsOfDataTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDataTable_DB_GenerCanStartFlowsOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DataTable_DB_GenerCanStartFlowsOfDataTable", _args, callback, asyncState);
                return _result;
            }
            
            public WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult EndDataTable_DB_GenerCanStartFlowsOfDataTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult _result = ((WorkNode.FF.DataTable_DB_GenerCanStartFlowsOfDataTableResponseDataTable_DB_GenerCanStartFlowsOfDataTableResult)(base.EndInvoke("DataTable_DB_GenerCanStartFlowsOfDataTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDataTable_DB_GenerEmpWorksOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DataTable_DB_GenerEmpWorksOfDataTable", _args, callback, asyncState);
                return _result;
            }
            
            public WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult EndDataTable_DB_GenerEmpWorksOfDataTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult _result = ((WorkNode.FF.DataTable_DB_GenerEmpWorksOfDataTableResponseDataTable_DB_GenerEmpWorksOfDataTableResult)(base.EndInvoke("DataTable_DB_GenerEmpWorksOfDataTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_GenerEmpWorksOfDataTable(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_GenerEmpWorksOfDataTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_GenerEmpWorksOfDataTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_GenerEmpWorksOfDataTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_CCList(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_CCList", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_CCList(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_CCList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_Truck(string flowNo, long WorkID, long FID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = flowNo;
                _args[1] = WorkID;
                _args[2] = FID;
                System.IAsyncResult _result = base.BeginInvoke("DB_Truck", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_Truck(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_Truck", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_GenerHungUpList(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_GenerHungUpList", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_GenerHungUpList(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_GenerHungUpList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDB_GenerRuning(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("DB_GenerRuning", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDB_GenerRuning(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DB_GenerRuning", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_CreateBlankWork(string flowNo, string starter, string title, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = flowNo;
                _args[1] = starter;
                _args[2] = title;
                System.IAsyncResult _result = base.BeginInvoke("Node_CreateBlankWork", _args, callback, asyncState);
                return _result;
            }
            
            public long EndNode_CreateBlankWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("Node_CreateBlankWork", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_CC_DoDel(string mypk, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mypk;
                System.IAsyncResult _result = base.BeginInvoke("Node_CC_DoDel", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNode_CC_DoDel(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Node_CC_DoDel", _args, result);
            }
            
            public System.IAsyncResult BeginNode_CC_To(string flowNo, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = flowNo;
                _args[1] = workID;
                _args[2] = toEmpNo;
                _args[3] = toEmpName;
                _args[4] = msgTitle;
                _args[5] = msgDoc;
                System.IAsyncResult _result = base.BeginInvoke("Node_CC_To", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_CC_To(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_CC_To", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_CC_SetRead(string mypks, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mypks;
                System.IAsyncResult _result = base.BeginInvoke("Node_CC_SetRead", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_CC_SetRead(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_CC_SetRead", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_CC(string fk_flow, int fk_node, long workID, string toEmpNo, string toEmpName, string msgTitle, string msgDoc, string pFlowNo, long pWorkID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = fk_flow;
                _args[1] = fk_node;
                _args[2] = workID;
                _args[3] = toEmpNo;
                _args[4] = toEmpName;
                _args[5] = msgTitle;
                _args[6] = msgDoc;
                _args[7] = pFlowNo;
                _args[8] = pWorkID;
                System.IAsyncResult _result = base.BeginInvoke("Node_CC", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_CC(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_CC", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_SetDraft(string fk_flow, long workID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fk_flow;
                _args[1] = workID;
                System.IAsyncResult _result = base.BeginInvoke("Node_SetDraft", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNode_SetDraft(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Node_SetDraft", _args, result);
            }
            
            public System.IAsyncResult BeginNode_UnHungUpWork(string fk_flow, long workid, string msg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fk_flow;
                _args[1] = workid;
                _args[2] = msg;
                System.IAsyncResult _result = base.BeginInvoke("Node_UnHungUpWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNode_UnHungUpWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Node_UnHungUpWork", _args, result);
            }
            
            public System.IAsyncResult BeginFlow_DoUnSend(string fk_flow, long workid, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fk_flow;
                _args[1] = workid;
                _args[2] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("Flow_DoUnSend", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFlow_DoUnSend(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Flow_DoUnSend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_HungUpWork(string fk_flow, long workid, int wayInt, string reldata, string hungNote, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = workid;
                _args[2] = wayInt;
                _args[3] = reldata;
                _args[4] = hungNote;
                System.IAsyncResult _result = base.BeginInvoke("Node_HungUpWork", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_HungUpWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_HungUpWork", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_TaskPoolTakebackOne(long workID, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = workID;
                _args[1] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("Node_TaskPoolTakebackOne", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_TaskPoolTakebackOne(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_TaskPoolTakebackOne", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_TaskPoolPutOne(long workID, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = workID;
                _args[1] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("Node_TaskPoolPutOne", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_TaskPoolPutOne(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_TaskPoolPutOne", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_Shift(long workID, string toEmp, string msg, string userNo, string sid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = workID;
                _args[1] = toEmp;
                _args[2] = msg;
                _args[3] = userNo;
                _args[4] = sid;
                System.IAsyncResult _result = base.BeginInvoke("Node_Shift", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_Shift(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_Shift", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_ReturnWork(string fk_flow, long workID, long fid, int currentNodeID, int returnToNodeID, string msg, bool isBackToThisNode, string userNo, string sid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = fk_flow;
                _args[1] = workID;
                _args[2] = fid;
                _args[3] = currentNodeID;
                _args[4] = returnToNodeID;
                _args[5] = msg;
                _args[6] = isBackToThisNode;
                _args[7] = userNo;
                _args[8] = sid;
                System.IAsyncResult _result = base.BeginInvoke("Node_ReturnWork", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_ReturnWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_ReturnWork", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAlertString(string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("AlertString", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAlertString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AlertString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPort_Login(string userNo, string pass, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userNo;
                _args[1] = pass;
                System.IAsyncResult _result = base.BeginInvoke("Port_Login", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPort_Login(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Port_Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoIt(string flag, string userNo, string sid, string val0, string val1, string val2, string val3, string val4, string val5, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = flag;
                _args[1] = userNo;
                _args[2] = sid;
                _args[3] = val0;
                _args[4] = val1;
                _args[5] = val2;
                _args[6] = val3;
                _args[7] = val4;
                _args[8] = val5;
                System.IAsyncResult _result = base.BeginInvoke("DoIt", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDoIt(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DoIt", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerWorkNode_SL(string fk_flow, int fk_node, long workID, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = fk_node;
                _args[2] = workID;
                _args[3] = fid;
                _args[4] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("GenerWorkNode_SL", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGenerWorkNode_SL(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GenerWorkNode_SL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerWorkNode_Android(string fk_flow, int fk_node, long workID, long fid, string userNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = fk_node;
                _args[2] = workID;
                _args[3] = fid;
                _args[4] = userNo;
                System.IAsyncResult _result = base.BeginInvoke("GenerWorkNode_Android", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGenerWorkNode_Android(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GenerWorkNode_Android", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_SaveWork(string fk_flow, int fk_node, long workID, string userNo, string dsXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = fk_node;
                _args[2] = workID;
                _args[3] = userNo;
                _args[4] = dsXml;
                System.IAsyncResult _result = base.BeginInvoke("Node_SaveWork", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_SaveWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_SaveWork", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNode_SendWork(string fk_flow, int fk_node, long workID, string dsXml, string currUserNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = fk_node;
                _args[2] = workID;
                _args[3] = dsXml;
                _args[4] = currUserNo;
                System.IAsyncResult _result = base.BeginInvoke("Node_SendWork", _args, callback, asyncState);
                return _result;
            }
            
            public string EndNode_SendWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Node_SendWork", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNoName(string SQL, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SQL;
                System.IAsyncResult _result = base.BeginInvoke("GetNoName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetNoName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetNoName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpload(WorkNode.FF.UploadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Upload", _args, callback, asyncState);
                return _result;
            }
            
            public WorkNode.FF.UploadResponse EndUpload(System.IAsyncResult result) {
                object[] _args = new object[0];
                WorkNode.FF.UploadResponse _result = ((WorkNode.FF.UploadResponse)(base.EndInvoke("Upload", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginParseExp(string strExp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strExp;
                System.IAsyncResult _result = base.BeginInvoke("ParseExp", _args, callback, asyncState);
                return _result;
            }
            
            public string EndParseExp(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ParseExp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCfgKey(string kev, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = kev;
                System.IAsyncResult _result = base.BeginInvoke("CfgKey", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCfgKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CfgKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile(WorkNode.FF.UploadFileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public WorkNode.FF.UploadFileResponse EndUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                WorkNode.FF.UploadFileResponse _result = ((WorkNode.FF.UploadFileResponse)(base.EndInvoke("UploadFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQL", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQL(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLs(string sqls, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sqls;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLs", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQLs(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQLs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTable2DataTable(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTable2DataTable", _args, callback, asyncState);
                return _result;
            }
            
            public WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult EndRunSQLReturnTable2DataTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult _result = ((WorkNode.FF.RunSQLReturnTable2DataTableResponseRunSQLReturnTable2DataTableResult)(base.EndInvoke("RunSQLReturnTable2DataTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnString(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnString", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnValInt(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnValInt", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQLReturnValInt(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQLReturnValInt", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnValFloat(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnValFloat", _args, callback, asyncState);
                return _result;
            }
            
            public float EndRunSQLReturnValFloat(System.IAsyncResult result) {
                object[] _args = new object[0];
                float _result = ((float)(base.EndInvoke("RunSQLReturnValFloat", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTableS(string sqls, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sqls;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTableS", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnTableS(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnTableS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginParseStringToPinyin(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("ParseStringToPinyin", _args, callback, asyncState);
                return _result;
            }
            
            public string EndParseStringToPinyin(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ParseStringToPinyin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = enumKey;
                _args[1] = enumLab;
                _args[2] = cfg;
                System.IAsyncResult _result = base.BeginInvoke("SaveEnum", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEnum(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEnum", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEnumField(string fk_mapData, string fieldKey, string fieldName, string enumKey, double x, double y, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = fk_mapData;
                _args[1] = fieldKey;
                _args[2] = fieldName;
                _args[3] = enumKey;
                _args[4] = x;
                _args[5] = y;
                System.IAsyncResult _result = base.BeginInvoke("SaveEnumField", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEnumField(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEnumField", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveFKField(string fk_mapData, string fieldKey, string fieldName, string enName, double x, double y, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = fk_mapData;
                _args[1] = fieldKey;
                _args[2] = fieldName;
                _args[3] = enName;
                _args[4] = x;
                _args[5] = y;
                System.IAsyncResult _result = base.BeginInvoke("SaveFKField", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveFKField(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveFKField", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveImageAsFile(WorkNode.FF.SaveImageAsFileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveImageAsFile", _args, callback, asyncState);
                return _result;
            }
            
            public WorkNode.FF.SaveImageAsFileResponse EndSaveImageAsFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                WorkNode.FF.SaveImageAsFileResponse _result = ((WorkNode.FF.SaveImageAsFileResponse)(base.EndInvoke("SaveImageAsFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadFrmTemplete(WorkNode.FF.LoadFrmTempleteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("LoadFrmTemplete", _args, callback, asyncState);
                return _result;
            }
            
            public WorkNode.FF.LoadFrmTempleteResponse EndLoadFrmTemplete(System.IAsyncResult result) {
                object[] _args = new object[0];
                WorkNode.FF.LoadFrmTempleteResponse _result = ((WorkNode.FF.LoadFrmTempleteResponse)(base.EndInvoke("LoadFrmTemplete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadFrmTempleteFile(string file, string fk_mapData, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = file;
                _args[1] = fk_mapData;
                _args[2] = isClear;
                _args[3] = isSetReadonly;
                System.IAsyncResult _result = base.BeginInvoke("LoadFrmTempleteFile", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoadFrmTempleteFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoadFrmTempleteFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetXmlData(string xmlFileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xmlFileName;
                System.IAsyncResult _result = base.BeginInvoke("GetXmlData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetXmlData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetXmlData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoType(string dotype, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = dotype;
                _args[1] = v1;
                _args[2] = v2;
                _args[3] = v3;
                _args[4] = v4;
                _args[5] = v5;
                System.IAsyncResult _result = base.BeginInvoke("DoType", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDoType(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DoType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vals;
                System.IAsyncResult _result = base.BeginInvoke("SaveEn", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEn(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFtpMethod(string doType, string v1, string v2, string v3, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = doType;
                _args[1] = v1;
                _args[2] = v2;
                _args[3] = v3;
                System.IAsyncResult _result = base.BeginInvoke("FtpMethod", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFtpMethod(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FtpMethod", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRequestSFTableV1(string uiBindKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = uiBindKey;
                System.IAsyncResult _result = base.BeginInvoke("RequestSFTableV1", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRequestSFTableV1(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RequestSFTableV1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerFrm(string fk_mapdata, int workID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fk_mapdata;
                _args[1] = workID;
                System.IAsyncResult _result = base.BeginInvoke("GenerFrm", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGenerFrm(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GenerFrm", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyFrm(string fromMapData, string fk_mapdata, bool isClear, bool isSetReadonly, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = fromMapData;
                _args[1] = fk_mapdata;
                _args[2] = isClear;
                _args[3] = isSetReadonly;
                System.IAsyncResult _result = base.BeginInvoke("CopyFrm", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCopyFrm(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CopyFrm", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveFrm(string fk_mapdata, string xml, string sqls, string mapAttrKeyName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = fk_mapdata;
                _args[1] = xml;
                _args[2] = sqls;
                _args[3] = mapAttrKeyName;
                System.IAsyncResult _result = base.BeginInvoke("SaveFrm", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveFrm(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveFrm", _args, result)));
                return _result;
            }
        }
    }
}
